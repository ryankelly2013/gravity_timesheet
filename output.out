
> gravitypayroll@0.0.0 test /Users/ryankell/Documents/gravity_payroll/gravitypayroll
> NODE_ENV=development mocha --recursive



  Timesheet Testing
Connection Succeeded.
    ✓ POST checking (276ms)
    ✓ PUT change 1 slot
    1) PUT change 2 corner cases


  2 passing (838ms)
  1 failing

  1) Timesheet Testing PUT change 2 corner cases:
     Uncaught AssertionError: expected EmbeddedDocument {
  __parentArray: Array [
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 0,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-01 00:00:00.000 -0500,
        time: 5,
        description: 'Updated the description',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 94 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 1,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-02 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 93 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 2,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-03 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 92 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 3,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-04 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 91 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 4,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-05 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 90 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 5,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-06 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8f ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 6,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-07 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8e ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 7,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-08 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8d ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 8,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-09 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8c ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 9,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-10 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8b ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 10,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-11 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8a ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 11,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-12 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 89 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 12,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-13 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 88 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 13,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-14 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 87 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 14,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-15 00:00:00.000 -0500,
        time: 5,
        description: 'Updated the description',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 86 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 15,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-16 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 85 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 16,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-17 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 84 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 17,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-18 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 83 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 18,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-19 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 82 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 19,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-20 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 81 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 20,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-21 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 80 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 21,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-22 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7f ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 22,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-23 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7e ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 23,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-24 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7d ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 24,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-25 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7c ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 25,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-26 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7b ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 26,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-27 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7a ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 27,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-28 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 79 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 28,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-29 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 78 ]
        }
      },
      $init: true
    },
    EmbeddedDocument {
      __parentArray: [Circular],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: [Circular],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 29,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-30 00:00:00.000 -0500,
        time: 0,
        description: '',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 77 ]
        }
      },
      $init: true
    },
    [Circular],
    _path: 'data',
    toBSON: Function { name: '' },
    _atomics: Object {},
    _parent: model {
      $__: InternalCache {
        strictMode: true,
        selected: Object {},
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object {
            data: 'init',
            __v: 'init',
            monthEnd: 'init',
            projectId: 'init',
            userId: 'init',
            _id: 'init'
          },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object {
              __v: true,
              data: true,
              monthEnd: true,
              projectId: true,
              userId: true,
              _id: true
            },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: undefined,
        fullPath: undefined,
        emitter: EventEmitter {
          domain: null,
          _events: Object {
            save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
            isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
          },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        data: [Circular],
        __v: 0,
        monthEnd: 2017-12-31 00:00:00.000 -0500,
        projectId: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
        },
        userId: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
        },
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
        }
      },
      $init: true
    },
    _cast: Function { name: '' },
    _markModified: Function { name: '' },
    _registerAtomic: Function { name: '' },
    $__getAtomics: Function { name: '' },
    hasAtomics: Function { name: 'hasAtomics' },
    _mapCast: Function { name: '' },
    push: Function { name: '' },
    nonAtomicPush: Function { name: '' },
    $pop: Function { name: '' },
    pop: Function { name: '' },
    $shift: Function { name: '$shift' },
    shift: Function { name: '' },
    pull: Function { name: '' },
    splice: Function { name: 'splice' },
    unshift: Function { name: '' },
    sort: Function { name: '' },
    addToSet: Function { name: 'addToSet' },
    set: Function { name: 'set' },
    toObject: Function { name: '' },
    inspect: Function { name: '' },
    indexOf: Function { name: 'indexOf' },
    remove: Function { name: '' },
    id: Function { name: '' },
    create: Function { name: '' },
    notify: Function { name: 'notify' },
    isMongooseArray: true,
    isMongooseDocumentArray: true,
    validators: Array [],
    _schema: DocumentArray {
      casterConstructor: Function {
        schema: Schema {
          obj: Object {
            day: Function { name: 'Date' },
            time: Function { name: 'Number' },
            description: Function { name: 'String' }
          },
          paths: Object {
            day: SchemaDate {
              path: 'day',
              instance: 'Date',
              validators: Array [],
              setters: Array [],
              getters: Array [],
              options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
              _index: null
            },
            time: SchemaNumber {
              path: 'time',
              instance: 'Number',
              validators: Array [],
              setters: Array [],
              getters: Array [],
              options: Object {
                type: Function { name: 'Number' },
                runSettersOnQuery: undefined
              },
              _index: null
            },
            description: SchemaString {
              enumValues: Array [],
              regExp: null,
              path: 'description',
              instance: 'String',
              validators: Array [],
              setters: Array [],
              getters: Array [],
              options: Object {
                type: Function { name: 'String' },
                runSettersOnQuery: undefined
              },
              _index: null
            },
            _id: ObjectId {
              path: '_id',
              instance: 'ObjectID',
              validators: Array [],
              setters: Array [ Function { name: 'resetId' } ],
              getters: Array [],
              options: Object {
                auto: true,
                type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                runSettersOnQuery: undefined
              },
              _index: null,
              defaultValue: Function { name: 'defaultId' }
            }
          },
          subpaths: Object {},
          virtuals: Object {
            id: VirtualType {
              path: 'id',
              getters: Array [ Function { name: 'idGetter' } ],
              setters: Array [],
              options: Object {}
            }
          },
          singleNestedPaths: Object {},
          nested: Object {},
          inherits: Object {},
          callQueue: Array [
            Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
            Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
            Array [
              'pre',
              Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
            ],
            Array [
              'pre',
              Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
            ],
            Array [ 'on', Array [ 'init', Function { name: '' } ] ],
            Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
            Array [ 'on', Array [ 'save', Function { name: '' } ] ]
          ],
          _indexes: Array [],
          methods: Object {},
          statics: Object {},
          tree: Object {
            day: Function { name: 'Date' },
            time: Function { name: 'Number' },
            description: Function { name: 'String' },
            _id: Object {
              type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
              auto: true
            },
            id: VirtualType {
              path: 'id',
              getters: Array [ Function { name: 'idGetter' } ],
              setters: Array [],
              options: Object {}
            }
          },
          query: Object {},
          childSchemas: Array [],
          plugins: Array [
            Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
            Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
            Object {
              fn: Function {
                storeShard: Function { name: 'storeShard' },
                name: 'shardingPlugin'
              },
              opts: Object { deduplicate: true }
            }
          ],
          s: Object {
            hooks: Kareem { _pres: Object {}, _posts: Object {} },
            kareemHooks: Object {
              count: true,
              find: true,
              findOne: true,
              findOneAndUpdate: true,
              findOneAndRemove: true,
              insertMany: true,
              update: true,
              updateMany: true,
              updateOne: true
            }
          },
          options: Object {
            minimize: true,
            typeKey: 'type',
            strict: true,
            retainKeyOrder: false,
            id: true,
            noVirtualId: false,
            _id: true,
            noId: false,
            validateBeforeSave: true,
            read: null,
            shardKey: null,
            autoIndex: null,
            discriminatorKey: '__t',
            versionKey: '__v',
            capped: false,
            bufferCommands: true
          },
          $implicitlyCreated: true,
          $globalPluginsApplied: true,
          _requiredpaths: Array []
        },
        $isArraySubdocument: true,
        domain: undefined,
        _events: undefined,
        _maxListeners: undefined,
        setMaxListeners: Function { name: 'setMaxListeners' },
        getMaxListeners: Function { name: 'getMaxListeners' },
        emit: Function { name: 'emit' },
        addListener: Function { name: 'addListener' },
        on: Function { name: 'addListener' },
        once: Function { name: 'once' },
        removeListener: Function { name: 'removeListener' },
        removeAllListeners: Function { name: 'removeAllListeners' },
        listeners: Function { name: 'listeners' },
        listenerCount: Function { name: 'listenerCount' },
        options: Object {
          type: Array [
            Object {
              day: Function { name: 'Date' },
              time: Function { name: 'Number' },
              description: Function { name: 'String' }
            }
          ]
        },
        path: 'data',
        name: 'EmbeddedDocument'
      },
      caster: Function {
        schema: Schema {
          obj: Object {
            day: Function { name: 'Date' },
            time: Function { name: 'Number' },
            description: Function { name: 'String' }
          },
          paths: Object {
            day: SchemaDate {
              path: 'day',
              instance: 'Date',
              validators: Array [],
              setters: Array [],
              getters: Array [],
              options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
              _index: null
            },
            time: SchemaNumber {
              path: 'time',
              instance: 'Number',
              validators: Array [],
              setters: Array [],
              getters: Array [],
              options: Object {
                type: Function { name: 'Number' },
                runSettersOnQuery: undefined
              },
              _index: null
            },
            description: SchemaString {
              enumValues: Array [],
              regExp: null,
              path: 'description',
              instance: 'String',
              validators: Array [],
              setters: Array [],
              getters: Array [],
              options: Object {
                type: Function { name: 'String' },
                runSettersOnQuery: undefined
              },
              _index: null
            },
            _id: ObjectId {
              path: '_id',
              instance: 'ObjectID',
              validators: Array [],
              setters: Array [ Function { name: 'resetId' } ],
              getters: Array [],
              options: Object {
                auto: true,
                type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                runSettersOnQuery: undefined
              },
              _index: null,
              defaultValue: Function { name: 'defaultId' }
            }
          },
          subpaths: Object {},
          virtuals: Object {
            id: VirtualType {
              path: 'id',
              getters: Array [ Function { name: 'idGetter' } ],
              setters: Array [],
              options: Object {}
            }
          },
          singleNestedPaths: Object {},
          nested: Object {},
          inherits: Object {},
          callQueue: Array [
            Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
            Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
            Array [
              'pre',
              Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
            ],
            Array [
              'pre',
              Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
            ],
            Array [ 'on', Array [ 'init', Function { name: '' } ] ],
            Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
            Array [ 'on', Array [ 'save', Function { name: '' } ] ]
          ],
          _indexes: Array [],
          methods: Object {},
          statics: Object {},
          tree: Object {
            day: Function { name: 'Date' },
            time: Function { name: 'Number' },
            description: Function { name: 'String' },
            _id: Object {
              type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
              auto: true
            },
            id: VirtualType {
              path: 'id',
              getters: Array [ Function { name: 'idGetter' } ],
              setters: Array [],
              options: Object {}
            }
          },
          query: Object {},
          childSchemas: Array [],
          plugins: Array [
            Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
            Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
            Object {
              fn: Function {
                storeShard: Function { name: 'storeShard' },
                name: 'shardingPlugin'
              },
              opts: Object { deduplicate: true }
            }
          ],
          s: Object {
            hooks: Kareem { _pres: Object {}, _posts: Object {} },
            kareemHooks: Object {
              count: true,
              find: true,
              findOne: true,
              findOneAndUpdate: true,
              findOneAndRemove: true,
              insertMany: true,
              update: true,
              updateMany: true,
              updateOne: true
            }
          },
          options: Object {
            minimize: true,
            typeKey: 'type',
            strict: true,
            retainKeyOrder: false,
            id: true,
            noVirtualId: false,
            _id: true,
            noId: false,
            validateBeforeSave: true,
            read: null,
            shardKey: null,
            autoIndex: null,
            discriminatorKey: '__t',
            versionKey: '__v',
            capped: false,
            bufferCommands: true
          },
          $implicitlyCreated: true,
          $globalPluginsApplied: true,
          _requiredpaths: Array []
        },
        $isArraySubdocument: true,
        domain: undefined,
        _events: undefined,
        _maxListeners: undefined,
        setMaxListeners: Function { name: 'setMaxListeners' },
        getMaxListeners: Function { name: 'getMaxListeners' },
        emit: Function { name: 'emit' },
        addListener: Function { name: 'addListener' },
        on: Function { name: 'addListener' },
        once: Function { name: 'once' },
        removeListener: Function { name: 'removeListener' },
        removeAllListeners: Function { name: 'removeAllListeners' },
        listeners: Function { name: 'listeners' },
        listenerCount: Function { name: 'listenerCount' },
        options: Object {
          type: Array [
            Object {
              day: Function { name: 'Date' },
              time: Function { name: 'Number' },
              description: Function { name: 'String' }
            }
          ]
        },
        path: 'data',
        name: 'EmbeddedDocument'
      },
      $isMongooseArray: true,
      path: 'data',
      instance: 'Array',
      validators: Array [],
      setters: Array [],
      getters: Array [],
      options: Object {
        type: Array [
          Object {
            day: Function { name: 'Date' },
            time: Function { name: 'Number' },
            description: Function { name: 'String' }
          }
        ]
      },
      _index: null,
      defaultValue: Function { name: '' },
      schema: Schema {
        obj: Object {
          day: Function { name: 'Date' },
          time: Function { name: 'Number' },
          description: Function { name: 'String' }
        },
        paths: Object {
          day: SchemaDate {
            path: 'day',
            instance: 'Date',
            validators: Array [],
            setters: Array [],
            getters: Array [],
            options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
            _index: null
          },
          time: SchemaNumber {
            path: 'time',
            instance: 'Number',
            validators: Array [],
            setters: Array [],
            getters: Array [],
            options: Object {
              type: Function { name: 'Number' },
              runSettersOnQuery: undefined
            },
            _index: null
          },
          description: SchemaString {
            enumValues: Array [],
            regExp: null,
            path: 'description',
            instance: 'String',
            validators: Array [],
            setters: Array [],
            getters: Array [],
            options: Object {
              type: Function { name: 'String' },
              runSettersOnQuery: undefined
            },
            _index: null
          },
          _id: ObjectId {
            path: '_id',
            instance: 'ObjectID',
            validators: Array [],
            setters: Array [ Function { name: 'resetId' } ],
            getters: Array [],
            options: Object {
              auto: true,
              type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
              runSettersOnQuery: undefined
            },
            _index: null,
            defaultValue: Function { name: 'defaultId' }
          }
        },
        subpaths: Object {},
        virtuals: Object {
          id: VirtualType {
            path: 'id',
            getters: Array [ Function { name: 'idGetter' } ],
            setters: Array [],
            options: Object {}
          }
        },
        singleNestedPaths: Object {},
        nested: Object {},
        inherits: Object {},
        callQueue: Array [
          Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
          Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
          Array [
            'pre',
            Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
          ],
          Array [
            'pre',
            Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
          ],
          Array [ 'on', Array [ 'init', Function { name: '' } ] ],
          Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
          Array [ 'on', Array [ 'save', Function { name: '' } ] ]
        ],
        _indexes: Array [],
        methods: Object {},
        statics: Object {},
        tree: Object {
          day: Function { name: 'Date' },
          time: Function { name: 'Number' },
          description: Function { name: 'String' },
          _id: Object {
            type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
            auto: true
          },
          id: VirtualType {
            path: 'id',
            getters: Array [ Function { name: 'idGetter' } ],
            setters: Array [],
            options: Object {}
          }
        },
        query: Object {},
        childSchemas: Array [],
        plugins: Array [
          Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
          Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
          Object {
            fn: Function {
              storeShard: Function { name: 'storeShard' },
              name: 'shardingPlugin'
            },
            opts: Object { deduplicate: true }
          }
        ],
        s: Object {
          hooks: Kareem { _pres: Object {}, _posts: Object {} },
          kareemHooks: Object {
            count: true,
            find: true,
            findOne: true,
            findOneAndUpdate: true,
            findOneAndRemove: true,
            insertMany: true,
            update: true,
            updateMany: true,
            updateOne: true
          }
        },
        options: Object {
          minimize: true,
          typeKey: 'type',
          strict: true,
          retainKeyOrder: false,
          id: true,
          noVirtualId: false,
          _id: true,
          noId: false,
          validateBeforeSave: true,
          read: null,
          shardKey: null,
          autoIndex: null,
          discriminatorKey: '__t',
          versionKey: '__v',
          capped: false,
          bufferCommands: true
        },
        $implicitlyCreated: true,
        $globalPluginsApplied: true,
        _requiredpaths: Array []
      },
      $isMongooseDocumentArray: true
    },
    _handlers: Object {
      isNew: Function { name: 'notify' },
      save: Function { name: 'notify' }
    }
  ],
  __parent: model {
    $__: InternalCache {
      strictMode: true,
      selected: Object {},
      shardval: undefined,
      saveError: undefined,
      validationError: undefined,
      adhocPaths: undefined,
      removing: undefined,
      inserting: undefined,
      version: undefined,
      getters: Object {},
      _id: undefined,
      populate: undefined,
      populated: undefined,
      wasPopulated: false,
      scope: undefined,
      activePaths: StateMachine {
        paths: Object {
          data: 'init',
          __v: 'init',
          monthEnd: 'init',
          projectId: 'init',
          userId: 'init',
          _id: 'init'
        },
        states: Object {
          ignore: Object {},
          default: Object {},
          init: Object {
            __v: true,
            data: true,
            monthEnd: true,
            projectId: true,
            userId: true,
            _id: true
          },
          modify: Object {},
          require: Object {}
        },
        stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
      },
      ownerDocument: undefined,
      fullPath: undefined,
      emitter: EventEmitter {
        domain: null,
        _events: Object {
          save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
          isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
        },
        _eventsCount: 2,
        _maxListeners: 0
      }
    },
    isNew: false,
    errors: undefined,
    _doc: Object {
      data: Array [
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 0,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-01 00:00:00.000 -0500,
            time: 5,
            description: 'Updated the description',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 94 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 1,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-02 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 93 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 2,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-03 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 92 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 3,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-04 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 91 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 4,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-05 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 90 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 5,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-06 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8f ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 6,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-07 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8e ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 7,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-08 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8d ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 8,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-09 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8c ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 9,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-10 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8b ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 10,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-11 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8a ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 11,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-12 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 89 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 12,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-13 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 88 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 13,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-14 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 87 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 14,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-15 00:00:00.000 -0500,
            time: 5,
            description: 'Updated the description',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 86 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 15,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-16 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 85 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 16,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-17 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 84 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 17,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-18 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 83 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 18,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-19 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 82 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 19,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-20 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 81 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 20,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-21 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 80 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 21,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-22 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7f ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 22,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-23 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7e ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 23,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-24 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7d ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 24,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-25 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7c ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 25,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-26 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7b ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 26,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-27 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7a ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 27,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-28 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 79 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 28,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-29 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 78 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: [Circular],
          __index: 29,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: [Circular],
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-30 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 77 ]
            }
          },
          $init: true
        },
        [Circular],
        _path: 'data',
        toBSON: Function { name: '' },
        _atomics: Object {},
        _parent: [Circular],
        _cast: Function { name: '' },
        _markModified: Function { name: '' },
        _registerAtomic: Function { name: '' },
        $__getAtomics: Function { name: '' },
        hasAtomics: Function { name: 'hasAtomics' },
        _mapCast: Function { name: '' },
        push: Function { name: '' },
        nonAtomicPush: Function { name: '' },
        $pop: Function { name: '' },
        pop: Function { name: '' },
        $shift: Function { name: '$shift' },
        shift: Function { name: '' },
        pull: Function { name: '' },
        splice: Function { name: 'splice' },
        unshift: Function { name: '' },
        sort: Function { name: '' },
        addToSet: Function { name: 'addToSet' },
        set: Function { name: 'set' },
        toObject: Function { name: '' },
        inspect: Function { name: '' },
        indexOf: Function { name: 'indexOf' },
        remove: Function { name: '' },
        id: Function { name: '' },
        create: Function { name: '' },
        notify: Function { name: 'notify' },
        isMongooseArray: true,
        isMongooseDocumentArray: true,
        validators: Array [],
        _schema: DocumentArray {
          casterConstructor: Function {
            schema: Schema {
              obj: Object {
                day: Function { name: 'Date' },
                time: Function { name: 'Number' },
                description: Function { name: 'String' }
              },
              paths: Object {
                day: SchemaDate {
                  path: 'day',
                  instance: 'Date',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                  _index: null
                },
                time: SchemaNumber {
                  path: 'time',
                  instance: 'Number',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object {
                    type: Function { name: 'Number' },
                    runSettersOnQuery: undefined
                  },
                  _index: null
                },
                description: SchemaString {
                  enumValues: Array [],
                  regExp: null,
                  path: 'description',
                  instance: 'String',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object {
                    type: Function { name: 'String' },
                    runSettersOnQuery: undefined
                  },
                  _index: null
                },
                _id: ObjectId {
                  path: '_id',
                  instance: 'ObjectID',
                  validators: Array [],
                  setters: Array [ Function { name: 'resetId' } ],
                  getters: Array [],
                  options: Object {
                    auto: true,
                    type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                    runSettersOnQuery: undefined
                  },
                  _index: null,
                  defaultValue: Function { name: 'defaultId' }
                }
              },
              subpaths: Object {},
              virtuals: Object {
                id: VirtualType {
                  path: 'id',
                  getters: Array [ Function { name: 'idGetter' } ],
                  setters: Array [],
                  options: Object {}
                }
              },
              singleNestedPaths: Object {},
              nested: Object {},
              inherits: Object {},
              callQueue: Array [
                Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                Array [
                  'pre',
                  Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
                ],
                Array [
                  'pre',
                  Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
                ],
                Array [ 'on', Array [ 'init', Function { name: '' } ] ],
                Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
                Array [ 'on', Array [ 'save', Function { name: '' } ] ]
              ],
              _indexes: Array [],
              methods: Object {},
              statics: Object {},
              tree: Object {
                day: Function { name: 'Date' },
                time: Function { name: 'Number' },
                description: Function { name: 'String' },
                _id: Object {
                  type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                  auto: true
                },
                id: VirtualType {
                  path: 'id',
                  getters: Array [ Function { name: 'idGetter' } ],
                  setters: Array [],
                  options: Object {}
                }
              },
              query: Object {},
              childSchemas: Array [],
              plugins: Array [
                Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                Object {
                  fn: Function {
                    storeShard: Function { name: 'storeShard' },
                    name: 'shardingPlugin'
                  },
                  opts: Object { deduplicate: true }
                }
              ],
              s: Object {
                hooks: Kareem { _pres: Object {}, _posts: Object {} },
                kareemHooks: Object {
                  count: true,
                  find: true,
                  findOne: true,
                  findOneAndUpdate: true,
                  findOneAndRemove: true,
                  insertMany: true,
                  update: true,
                  updateMany: true,
                  updateOne: true
                }
              },
              options: Object {
                minimize: true,
                typeKey: 'type',
                strict: true,
                retainKeyOrder: false,
                id: true,
                noVirtualId: false,
                _id: true,
                noId: false,
                validateBeforeSave: true,
                read: null,
                shardKey: null,
                autoIndex: null,
                discriminatorKey: '__t',
                versionKey: '__v',
                capped: false,
                bufferCommands: true
              },
              $implicitlyCreated: true,
              $globalPluginsApplied: true,
              _requiredpaths: Array []
            },
            $isArraySubdocument: true,
            domain: undefined,
            _events: undefined,
            _maxListeners: undefined,
            setMaxListeners: Function { name: 'setMaxListeners' },
            getMaxListeners: Function { name: 'getMaxListeners' },
            emit: Function { name: 'emit' },
            addListener: Function { name: 'addListener' },
            on: Function { name: 'addListener' },
            once: Function { name: 'once' },
            removeListener: Function { name: 'removeListener' },
            removeAllListeners: Function { name: 'removeAllListeners' },
            listeners: Function { name: 'listeners' },
            listenerCount: Function { name: 'listenerCount' },
            options: Object {
              type: Array [
                Object {
                  day: Function { name: 'Date' },
                  time: Function { name: 'Number' },
                  description: Function { name: 'String' }
                }
              ]
            },
            path: 'data',
            name: 'EmbeddedDocument'
          },
          caster: Function {
            schema: Schema {
              obj: Object {
                day: Function { name: 'Date' },
                time: Function { name: 'Number' },
                description: Function { name: 'String' }
              },
              paths: Object {
                day: SchemaDate {
                  path: 'day',
                  instance: 'Date',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                  _index: null
                },
                time: SchemaNumber {
                  path: 'time',
                  instance: 'Number',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object {
                    type: Function { name: 'Number' },
                    runSettersOnQuery: undefined
                  },
                  _index: null
                },
                description: SchemaString {
                  enumValues: Array [],
                  regExp: null,
                  path: 'description',
                  instance: 'String',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object {
                    type: Function { name: 'String' },
                    runSettersOnQuery: undefined
                  },
                  _index: null
                },
                _id: ObjectId {
                  path: '_id',
                  instance: 'ObjectID',
                  validators: Array [],
                  setters: Array [ Function { name: 'resetId' } ],
                  getters: Array [],
                  options: Object {
                    auto: true,
                    type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                    runSettersOnQuery: undefined
                  },
                  _index: null,
                  defaultValue: Function { name: 'defaultId' }
                }
              },
              subpaths: Object {},
              virtuals: Object {
                id: VirtualType {
                  path: 'id',
                  getters: Array [ Function { name: 'idGetter' } ],
                  setters: Array [],
                  options: Object {}
                }
              },
              singleNestedPaths: Object {},
              nested: Object {},
              inherits: Object {},
              callQueue: Array [
                Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                Array [
                  'pre',
                  Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
                ],
                Array [
                  'pre',
                  Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
                ],
                Array [ 'on', Array [ 'init', Function { name: '' } ] ],
                Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
                Array [ 'on', Array [ 'save', Function { name: '' } ] ]
              ],
              _indexes: Array [],
              methods: Object {},
              statics: Object {},
              tree: Object {
                day: Function { name: 'Date' },
                time: Function { name: 'Number' },
                description: Function { name: 'String' },
                _id: Object {
                  type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                  auto: true
                },
                id: VirtualType {
                  path: 'id',
                  getters: Array [ Function { name: 'idGetter' } ],
                  setters: Array [],
                  options: Object {}
                }
              },
              query: Object {},
              childSchemas: Array [],
              plugins: Array [
                Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                Object {
                  fn: Function {
                    storeShard: Function { name: 'storeShard' },
                    name: 'shardingPlugin'
                  },
                  opts: Object { deduplicate: true }
                }
              ],
              s: Object {
                hooks: Kareem { _pres: Object {}, _posts: Object {} },
                kareemHooks: Object {
                  count: true,
                  find: true,
                  findOne: true,
                  findOneAndUpdate: true,
                  findOneAndRemove: true,
                  insertMany: true,
                  update: true,
                  updateMany: true,
                  updateOne: true
                }
              },
              options: Object {
                minimize: true,
                typeKey: 'type',
                strict: true,
                retainKeyOrder: false,
                id: true,
                noVirtualId: false,
                _id: true,
                noId: false,
                validateBeforeSave: true,
                read: null,
                shardKey: null,
                autoIndex: null,
                discriminatorKey: '__t',
                versionKey: '__v',
                capped: false,
                bufferCommands: true
              },
              $implicitlyCreated: true,
              $globalPluginsApplied: true,
              _requiredpaths: Array []
            },
            $isArraySubdocument: true,
            domain: undefined,
            _events: undefined,
            _maxListeners: undefined,
            setMaxListeners: Function { name: 'setMaxListeners' },
            getMaxListeners: Function { name: 'getMaxListeners' },
            emit: Function { name: 'emit' },
            addListener: Function { name: 'addListener' },
            on: Function { name: 'addListener' },
            once: Function { name: 'once' },
            removeListener: Function { name: 'removeListener' },
            removeAllListeners: Function { name: 'removeAllListeners' },
            listeners: Function { name: 'listeners' },
            listenerCount: Function { name: 'listenerCount' },
            options: Object {
              type: Array [
                Object {
                  day: Function { name: 'Date' },
                  time: Function { name: 'Number' },
                  description: Function { name: 'String' }
                }
              ]
            },
            path: 'data',
            name: 'EmbeddedDocument'
          },
          $isMongooseArray: true,
          path: 'data',
          instance: 'Array',
          validators: Array [],
          setters: Array [],
          getters: Array [],
          options: Object {
            type: Array [
              Object {
                day: Function { name: 'Date' },
                time: Function { name: 'Number' },
                description: Function { name: 'String' }
              }
            ]
          },
          _index: null,
          defaultValue: Function { name: '' },
          schema: Schema {
            obj: Object {
              day: Function { name: 'Date' },
              time: Function { name: 'Number' },
              description: Function { name: 'String' }
            },
            paths: Object {
              day: SchemaDate {
                path: 'day',
                instance: 'Date',
                validators: Array [],
                setters: Array [],
                getters: Array [],
                options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                _index: null
              },
              time: SchemaNumber {
                path: 'time',
                instance: 'Number',
                validators: Array [],
                setters: Array [],
                getters: Array [],
                options: Object {
                  type: Function { name: 'Number' },
                  runSettersOnQuery: undefined
                },
                _index: null
              },
              description: SchemaString {
                enumValues: Array [],
                regExp: null,
                path: 'description',
                instance: 'String',
                validators: Array [],
                setters: Array [],
                getters: Array [],
                options: Object {
                  type: Function { name: 'String' },
                  runSettersOnQuery: undefined
                },
                _index: null
              },
              _id: ObjectId {
                path: '_id',
                instance: 'ObjectID',
                validators: Array [],
                setters: Array [ Function { name: 'resetId' } ],
                getters: Array [],
                options: Object {
                  auto: true,
                  type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                  runSettersOnQuery: undefined
                },
                _index: null,
                defaultValue: Function { name: 'defaultId' }
              }
            },
            subpaths: Object {},
            virtuals: Object {
              id: VirtualType {
                path: 'id',
                getters: Array [ Function { name: 'idGetter' } ],
                setters: Array [],
                options: Object {}
              }
            },
            singleNestedPaths: Object {},
            nested: Object {},
            inherits: Object {},
            callQueue: Array [
              Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
              Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
              Array [
                'pre',
                Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
              ],
              Array [
                'pre',
                Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
              ],
              Array [ 'on', Array [ 'init', Function { name: '' } ] ],
              Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
              Array [ 'on', Array [ 'save', Function { name: '' } ] ]
            ],
            _indexes: Array [],
            methods: Object {},
            statics: Object {},
            tree: Object {
              day: Function { name: 'Date' },
              time: Function { name: 'Number' },
              description: Function { name: 'String' },
              _id: Object {
                type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                auto: true
              },
              id: VirtualType {
                path: 'id',
                getters: Array [ Function { name: 'idGetter' } ],
                setters: Array [],
                options: Object {}
              }
            },
            query: Object {},
            childSchemas: Array [],
            plugins: Array [
              Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
              Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
              Object {
                fn: Function {
                  storeShard: Function { name: 'storeShard' },
                  name: 'shardingPlugin'
                },
                opts: Object { deduplicate: true }
              }
            ],
            s: Object {
              hooks: Kareem { _pres: Object {}, _posts: Object {} },
              kareemHooks: Object {
                count: true,
                find: true,
                findOne: true,
                findOneAndUpdate: true,
                findOneAndRemove: true,
                insertMany: true,
                update: true,
                updateMany: true,
                updateOne: true
              }
            },
            options: Object {
              minimize: true,
              typeKey: 'type',
              strict: true,
              retainKeyOrder: false,
              id: true,
              noVirtualId: false,
              _id: true,
              noId: false,
              validateBeforeSave: true,
              read: null,
              shardKey: null,
              autoIndex: null,
              discriminatorKey: '__t',
              versionKey: '__v',
              capped: false,
              bufferCommands: true
            },
            $implicitlyCreated: true,
            $globalPluginsApplied: true,
            _requiredpaths: Array []
          },
          $isMongooseDocumentArray: true
        },
        _handlers: Object {
          isNew: Function { name: 'notify' },
          save: Function { name: 'notify' }
        }
      ],
      __v: 0,
      monthEnd: 2017-12-31 00:00:00.000 -0500,
      projectId: ObjectID {
        _bsontype: 'ObjectID',
        id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
      },
      userId: ObjectID {
        _bsontype: 'ObjectID',
        id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
      },
      _id: ObjectID {
        _bsontype: 'ObjectID',
        id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
      }
    },
    $init: true
  },
  __index: 30,
  $__: InternalCache {
    strictMode: true,
    selected: undefined,
    shardval: undefined,
    saveError: undefined,
    validationError: undefined,
    adhocPaths: undefined,
    removing: undefined,
    inserting: undefined,
    version: undefined,
    getters: Object {},
    _id: undefined,
    populate: undefined,
    populated: undefined,
    wasPopulated: false,
    scope: undefined,
    activePaths: StateMachine {
      paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
      states: Object {
        ignore: Object {},
        default: Object {},
        init: Object { day: true, time: true, description: true, _id: true },
        modify: Object {},
        require: Object {}
      },
      stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
    },
    ownerDocument: model {
      $__: InternalCache {
        strictMode: true,
        selected: Object {},
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object {
            data: 'init',
            __v: 'init',
            monthEnd: 'init',
            projectId: 'init',
            userId: 'init',
            _id: 'init'
          },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object {
              __v: true,
              data: true,
              monthEnd: true,
              projectId: true,
              userId: true,
              _id: true
            },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: undefined,
        fullPath: undefined,
        emitter: EventEmitter {
          domain: null,
          _events: Object {
            save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
            isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
          },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        data: Array [
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 0,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-01 00:00:00.000 -0500,
              time: 5,
              description: 'Updated the description',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 94 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 1,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-02 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 93 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 2,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-03 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 92 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 3,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-04 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 91 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 4,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-05 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 90 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 5,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-06 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8f ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 6,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-07 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8e ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 7,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-08 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8d ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 8,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-09 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8c ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 9,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-10 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8b ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 10,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-11 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8a ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 11,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-12 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 89 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 12,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-13 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 88 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 13,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-14 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 87 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 14,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-15 00:00:00.000 -0500,
              time: 5,
              description: 'Updated the description',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 86 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 15,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-16 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 85 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 16,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-17 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 84 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 17,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-18 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 83 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 18,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-19 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 82 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 19,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-20 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 81 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 20,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-21 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 80 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 21,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-22 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7f ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 22,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-23 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7e ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 23,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-24 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7d ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 24,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-25 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7c ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 25,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-26 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7b ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 26,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-27 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7a ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 27,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-28 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 79 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 28,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-29 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 78 ]
              }
            },
            $init: true
          },
          EmbeddedDocument {
            __parentArray: [Circular],
            __parent: [Circular],
            __index: 29,
            $__: InternalCache {
              strictMode: true,
              selected: undefined,
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object { day: true, time: true, description: true, _id: true },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: [Circular],
              fullPath: 'data',
              emitter: EventEmitter {
                domain: null,
                _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              day: 2017-12-30 00:00:00.000 -0500,
              time: 0,
              description: '',
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 77 ]
              }
            },
            $init: true
          },
          [Circular],
          _path: 'data',
          toBSON: Function { name: '' },
          _atomics: Object {},
          _parent: [Circular],
          _cast: Function { name: '' },
          _markModified: Function { name: '' },
          _registerAtomic: Function { name: '' },
          $__getAtomics: Function { name: '' },
          hasAtomics: Function { name: 'hasAtomics' },
          _mapCast: Function { name: '' },
          push: Function { name: '' },
          nonAtomicPush: Function { name: '' },
          $pop: Function { name: '' },
          pop: Function { name: '' },
          $shift: Function { name: '$shift' },
          shift: Function { name: '' },
          pull: Function { name: '' },
          splice: Function { name: 'splice' },
          unshift: Function { name: '' },
          sort: Function { name: '' },
          addToSet: Function { name: 'addToSet' },
          set: Function { name: 'set' },
          toObject: Function { name: '' },
          inspect: Function { name: '' },
          indexOf: Function { name: 'indexOf' },
          remove: Function { name: '' },
          id: Function { name: '' },
          create: Function { name: '' },
          notify: Function { name: 'notify' },
          isMongooseArray: true,
          isMongooseDocumentArray: true,
          validators: Array [],
          _schema: DocumentArray {
            casterConstructor: Function {
              schema: Schema {
                obj: Object {
                  day: Function { name: 'Date' },
                  time: Function { name: 'Number' },
                  description: Function { name: 'String' }
                },
                paths: Object {
                  day: SchemaDate {
                    path: 'day',
                    instance: 'Date',
                    validators: Array [],
                    setters: Array [],
                    getters: Array [],
                    options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                    _index: null
                  },
                  time: SchemaNumber {
                    path: 'time',
                    instance: 'Number',
                    validators: Array [],
                    setters: Array [],
                    getters: Array [],
                    options: Object {
                      type: Function { name: 'Number' },
                      runSettersOnQuery: undefined
                    },
                    _index: null
                  },
                  description: SchemaString {
                    enumValues: Array [],
                    regExp: null,
                    path: 'description',
                    instance: 'String',
                    validators: Array [],
                    setters: Array [],
                    getters: Array [],
                    options: Object {
                      type: Function { name: 'String' },
                      runSettersOnQuery: undefined
                    },
                    _index: null
                  },
                  _id: ObjectId {
                    path: '_id',
                    instance: 'ObjectID',
                    validators: Array [],
                    setters: Array [ Function { name: 'resetId' } ],
                    getters: Array [],
                    options: Object {
                      auto: true,
                      type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                      runSettersOnQuery: undefined
                    },
                    _index: null,
                    defaultValue: Function { name: 'defaultId' }
                  }
                },
                subpaths: Object {},
                virtuals: Object {
                  id: VirtualType {
                    path: 'id',
                    getters: Array [ Function { name: 'idGetter' } ],
                    setters: Array [],
                    options: Object {}
                  }
                },
                singleNestedPaths: Object {},
                nested: Object {},
                inherits: Object {},
                callQueue: Array [
                  Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                  Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                  Array [
                    'pre',
                    Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
                  ],
                  Array [
                    'pre',
                    Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
                  ],
                  Array [ 'on', Array [ 'init', Function { name: '' } ] ],
                  Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
                  Array [ 'on', Array [ 'save', Function { name: '' } ] ]
                ],
                _indexes: Array [],
                methods: Object {},
                statics: Object {},
                tree: Object {
                  day: Function { name: 'Date' },
                  time: Function { name: 'Number' },
                  description: Function { name: 'String' },
                  _id: Object {
                    type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                    auto: true
                  },
                  id: VirtualType {
                    path: 'id',
                    getters: Array [ Function { name: 'idGetter' } ],
                    setters: Array [],
                    options: Object {}
                  }
                },
                query: Object {},
                childSchemas: Array [],
                plugins: Array [
                  Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                  Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                  Object {
                    fn: Function {
                      storeShard: Function { name: 'storeShard' },
                      name: 'shardingPlugin'
                    },
                    opts: Object { deduplicate: true }
                  }
                ],
                s: Object {
                  hooks: Kareem { _pres: Object {}, _posts: Object {} },
                  kareemHooks: Object {
                    count: true,
                    find: true,
                    findOne: true,
                    findOneAndUpdate: true,
                    findOneAndRemove: true,
                    insertMany: true,
                    update: true,
                    updateMany: true,
                    updateOne: true
                  }
                },
                options: Object {
                  minimize: true,
                  typeKey: 'type',
                  strict: true,
                  retainKeyOrder: false,
                  id: true,
                  noVirtualId: false,
                  _id: true,
                  noId: false,
                  validateBeforeSave: true,
                  read: null,
                  shardKey: null,
                  autoIndex: null,
                  discriminatorKey: '__t',
                  versionKey: '__v',
                  capped: false,
                  bufferCommands: true
                },
                $implicitlyCreated: true,
                $globalPluginsApplied: true,
                _requiredpaths: Array []
              },
              $isArraySubdocument: true,
              domain: undefined,
              _events: undefined,
              _maxListeners: undefined,
              setMaxListeners: Function { name: 'setMaxListeners' },
              getMaxListeners: Function { name: 'getMaxListeners' },
              emit: Function { name: 'emit' },
              addListener: Function { name: 'addListener' },
              on: Function { name: 'addListener' },
              once: Function { name: 'once' },
              removeListener: Function { name: 'removeListener' },
              removeAllListeners: Function { name: 'removeAllListeners' },
              listeners: Function { name: 'listeners' },
              listenerCount: Function { name: 'listenerCount' },
              options: Object {
                type: Array [
                  Object {
                    day: Function { name: 'Date' },
                    time: Function { name: 'Number' },
                    description: Function { name: 'String' }
                  }
                ]
              },
              path: 'data',
              name: 'EmbeddedDocument'
            },
            caster: Function {
              schema: Schema {
                obj: Object {
                  day: Function { name: 'Date' },
                  time: Function { name: 'Number' },
                  description: Function { name: 'String' }
                },
                paths: Object {
                  day: SchemaDate {
                    path: 'day',
                    instance: 'Date',
                    validators: Array [],
                    setters: Array [],
                    getters: Array [],
                    options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                    _index: null
                  },
                  time: SchemaNumber {
                    path: 'time',
                    instance: 'Number',
                    validators: Array [],
                    setters: Array [],
                    getters: Array [],
                    options: Object {
                      type: Function { name: 'Number' },
                      runSettersOnQuery: undefined
                    },
                    _index: null
                  },
                  description: SchemaString {
                    enumValues: Array [],
                    regExp: null,
                    path: 'description',
                    instance: 'String',
                    validators: Array [],
                    setters: Array [],
                    getters: Array [],
                    options: Object {
                      type: Function { name: 'String' },
                      runSettersOnQuery: undefined
                    },
                    _index: null
                  },
                  _id: ObjectId {
                    path: '_id',
                    instance: 'ObjectID',
                    validators: Array [],
                    setters: Array [ Function { name: 'resetId' } ],
                    getters: Array [],
                    options: Object {
                      auto: true,
                      type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                      runSettersOnQuery: undefined
                    },
                    _index: null,
                    defaultValue: Function { name: 'defaultId' }
                  }
                },
                subpaths: Object {},
                virtuals: Object {
                  id: VirtualType {
                    path: 'id',
                    getters: Array [ Function { name: 'idGetter' } ],
                    setters: Array [],
                    options: Object {}
                  }
                },
                singleNestedPaths: Object {},
                nested: Object {},
                inherits: Object {},
                callQueue: Array [
                  Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                  Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                  Array [
                    'pre',
                    Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
                  ],
                  Array [
                    'pre',
                    Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
                  ],
                  Array [ 'on', Array [ 'init', Function { name: '' } ] ],
                  Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
                  Array [ 'on', Array [ 'save', Function { name: '' } ] ]
                ],
                _indexes: Array [],
                methods: Object {},
                statics: Object {},
                tree: Object {
                  day: Function { name: 'Date' },
                  time: Function { name: 'Number' },
                  description: Function { name: 'String' },
                  _id: Object {
                    type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                    auto: true
                  },
                  id: VirtualType {
                    path: 'id',
                    getters: Array [ Function { name: 'idGetter' } ],
                    setters: Array [],
                    options: Object {}
                  }
                },
                query: Object {},
                childSchemas: Array [],
                plugins: Array [
                  Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                  Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                  Object {
                    fn: Function {
                      storeShard: Function { name: 'storeShard' },
                      name: 'shardingPlugin'
                    },
                    opts: Object { deduplicate: true }
                  }
                ],
                s: Object {
                  hooks: Kareem { _pres: Object {}, _posts: Object {} },
                  kareemHooks: Object {
                    count: true,
                    find: true,
                    findOne: true,
                    findOneAndUpdate: true,
                    findOneAndRemove: true,
                    insertMany: true,
                    update: true,
                    updateMany: true,
                    updateOne: true
                  }
                },
                options: Object {
                  minimize: true,
                  typeKey: 'type',
                  strict: true,
                  retainKeyOrder: false,
                  id: true,
                  noVirtualId: false,
                  _id: true,
                  noId: false,
                  validateBeforeSave: true,
                  read: null,
                  shardKey: null,
                  autoIndex: null,
                  discriminatorKey: '__t',
                  versionKey: '__v',
                  capped: false,
                  bufferCommands: true
                },
                $implicitlyCreated: true,
                $globalPluginsApplied: true,
                _requiredpaths: Array []
              },
              $isArraySubdocument: true,
              domain: undefined,
              _events: undefined,
              _maxListeners: undefined,
              setMaxListeners: Function { name: 'setMaxListeners' },
              getMaxListeners: Function { name: 'getMaxListeners' },
              emit: Function { name: 'emit' },
              addListener: Function { name: 'addListener' },
              on: Function { name: 'addListener' },
              once: Function { name: 'once' },
              removeListener: Function { name: 'removeListener' },
              removeAllListeners: Function { name: 'removeAllListeners' },
              listeners: Function { name: 'listeners' },
              listenerCount: Function { name: 'listenerCount' },
              options: Object {
                type: Array [
                  Object {
                    day: Function { name: 'Date' },
                    time: Function { name: 'Number' },
                    description: Function { name: 'String' }
                  }
                ]
              },
              path: 'data',
              name: 'EmbeddedDocument'
            },
            $isMongooseArray: true,
            path: 'data',
            instance: 'Array',
            validators: Array [],
            setters: Array [],
            getters: Array [],
            options: Object {
              type: Array [
                Object {
                  day: Function { name: 'Date' },
                  time: Function { name: 'Number' },
                  description: Function { name: 'String' }
                }
              ]
            },
            _index: null,
            defaultValue: Function { name: '' },
            schema: Schema {
              obj: Object {
                day: Function { name: 'Date' },
                time: Function { name: 'Number' },
                description: Function { name: 'String' }
              },
              paths: Object {
                day: SchemaDate {
                  path: 'day',
                  instance: 'Date',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                  _index: null
                },
                time: SchemaNumber {
                  path: 'time',
                  instance: 'Number',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object {
                    type: Function { name: 'Number' },
                    runSettersOnQuery: undefined
                  },
                  _index: null
                },
                description: SchemaString {
                  enumValues: Array [],
                  regExp: null,
                  path: 'description',
                  instance: 'String',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object {
                    type: Function { name: 'String' },
                    runSettersOnQuery: undefined
                  },
                  _index: null
                },
                _id: ObjectId {
                  path: '_id',
                  instance: 'ObjectID',
                  validators: Array [],
                  setters: Array [ Function { name: 'resetId' } ],
                  getters: Array [],
                  options: Object {
                    auto: true,
                    type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                    runSettersOnQuery: undefined
                  },
                  _index: null,
                  defaultValue: Function { name: 'defaultId' }
                }
              },
              subpaths: Object {},
              virtuals: Object {
                id: VirtualType {
                  path: 'id',
                  getters: Array [ Function { name: 'idGetter' } ],
                  setters: Array [],
                  options: Object {}
                }
              },
              singleNestedPaths: Object {},
              nested: Object {},
              inherits: Object {},
              callQueue: Array [
                Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                Array [
                  'pre',
                  Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
                ],
                Array [
                  'pre',
                  Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
                ],
                Array [ 'on', Array [ 'init', Function { name: '' } ] ],
                Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
                Array [ 'on', Array [ 'save', Function { name: '' } ] ]
              ],
              _indexes: Array [],
              methods: Object {},
              statics: Object {},
              tree: Object {
                day: Function { name: 'Date' },
                time: Function { name: 'Number' },
                description: Function { name: 'String' },
                _id: Object {
                  type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                  auto: true
                },
                id: VirtualType {
                  path: 'id',
                  getters: Array [ Function { name: 'idGetter' } ],
                  setters: Array [],
                  options: Object {}
                }
              },
              query: Object {},
              childSchemas: Array [],
              plugins: Array [
                Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                Object {
                  fn: Function {
                    storeShard: Function { name: 'storeShard' },
                    name: 'shardingPlugin'
                  },
                  opts: Object { deduplicate: true }
                }
              ],
              s: Object {
                hooks: Kareem { _pres: Object {}, _posts: Object {} },
                kareemHooks: Object {
                  count: true,
                  find: true,
                  findOne: true,
                  findOneAndUpdate: true,
                  findOneAndRemove: true,
                  insertMany: true,
                  update: true,
                  updateMany: true,
                  updateOne: true
                }
              },
              options: Object {
                minimize: true,
                typeKey: 'type',
                strict: true,
                retainKeyOrder: false,
                id: true,
                noVirtualId: false,
                _id: true,
                noId: false,
                validateBeforeSave: true,
                read: null,
                shardKey: null,
                autoIndex: null,
                discriminatorKey: '__t',
                versionKey: '__v',
                capped: false,
                bufferCommands: true
              },
              $implicitlyCreated: true,
              $globalPluginsApplied: true,
              _requiredpaths: Array []
            },
            $isMongooseDocumentArray: true
          },
          _handlers: Object {
            isNew: Function { name: 'notify' },
            save: Function { name: 'notify' }
          }
        ],
        __v: 0,
        monthEnd: 2017-12-31 00:00:00.000 -0500,
        projectId: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
        },
        userId: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
        },
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
        }
      },
      $init: true
    },
    fullPath: 'data',
    emitter: EventEmitter {
      domain: null,
      _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
      _eventsCount: 2,
      _maxListeners: 0
    }
  },
  isNew: false,
  errors: undefined,
  _doc: Object {
    day: 2017-12-31 00:00:00.000 -0500,
    time: 5,
    description: 'Updated the description',
    _id: ObjectID {
      _bsontype: 'ObjectID',
      id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 76 ]
    }
  },
  $init: true
} to be a date
    expected EmbeddedDocument {
      __parentArray: Array [
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 0,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-01 00:00:00.000 -0500,
            time: 5,
            description: 'Updated the description',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 94 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 1,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-02 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 93 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 2,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-03 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 92 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 3,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-04 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 91 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 4,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-05 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 90 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 5,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-06 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8f ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 6,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-07 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8e ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 7,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-08 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8d ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 8,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-09 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8c ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 9,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-10 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8b ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 10,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-11 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8a ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 11,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-12 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 89 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 12,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-13 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 88 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 13,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-14 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 87 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 14,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-15 00:00:00.000 -0500,
            time: 5,
            description: 'Updated the description',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 86 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 15,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-16 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 85 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 16,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-17 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 84 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 17,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-18 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 83 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 18,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-19 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 82 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 19,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-20 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 81 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 20,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-21 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 80 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 21,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-22 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7f ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 22,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-23 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7e ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 23,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-24 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7d ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 24,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-25 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7c ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 25,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-26 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7b ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 26,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-27 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7a ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 27,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-28 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 79 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 28,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-29 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 78 ]
            }
          },
          $init: true
        },
        EmbeddedDocument {
          __parentArray: [Circular],
          __parent: model {
            $__: InternalCache {
              strictMode: true,
              selected: Object {},
              shardval: undefined,
              saveError: undefined,
              validationError: undefined,
              adhocPaths: undefined,
              removing: undefined,
              inserting: undefined,
              version: undefined,
              getters: Object {},
              _id: undefined,
              populate: undefined,
              populated: undefined,
              wasPopulated: false,
              scope: undefined,
              activePaths: StateMachine {
                paths: Object {
                  data: 'init',
                  __v: 'init',
                  monthEnd: 'init',
                  projectId: 'init',
                  userId: 'init',
                  _id: 'init'
                },
                states: Object {
                  ignore: Object {},
                  default: Object {},
                  init: Object {
                    __v: true,
                    data: true,
                    monthEnd: true,
                    projectId: true,
                    userId: true,
                    _id: true
                  },
                  modify: Object {},
                  require: Object {}
                },
                stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
              },
              ownerDocument: undefined,
              fullPath: undefined,
              emitter: EventEmitter {
                domain: null,
                _events: Object {
                  save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                  isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                },
                _eventsCount: 2,
                _maxListeners: 0
              }
            },
            isNew: false,
            errors: undefined,
            _doc: Object {
              data: [Circular],
              __v: 0,
              monthEnd: 2017-12-31 00:00:00.000 -0500,
              projectId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
              },
              userId: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
              },
              _id: ObjectID {
                _bsontype: 'ObjectID',
                id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
              }
            },
            $init: true
          },
          __index: 29,
          $__: InternalCache {
            strictMode: true,
            selected: undefined,
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object { day: true, time: true, description: true, _id: true },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: model {
              $__: InternalCache {
                strictMode: true,
                selected: Object {},
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object {
                    data: 'init',
                    __v: 'init',
                    monthEnd: 'init',
                    projectId: 'init',
                    userId: 'init',
                    _id: 'init'
                  },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object {
                      __v: true,
                      data: true,
                      monthEnd: true,
                      projectId: true,
                      userId: true,
                      _id: true
                    },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: undefined,
                fullPath: undefined,
                emitter: EventEmitter {
                  domain: null,
                  _events: Object {
                    save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                    isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
                  },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                data: [Circular],
                __v: 0,
                monthEnd: 2017-12-31 00:00:00.000 -0500,
                projectId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
                },
                userId: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
                },
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
                }
              },
              $init: true
            },
            fullPath: 'data',
            emitter: EventEmitter {
              domain: null,
              _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            day: 2017-12-30 00:00:00.000 -0500,
            time: 0,
            description: '',
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 77 ]
            }
          },
          $init: true
        },
        [Circular],
        _path: 'data',
        toBSON: Function { name: '' },
        _atomics: Object {},
        _parent: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: [Circular],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        _cast: Function { name: '' },
        _markModified: Function { name: '' },
        _registerAtomic: Function { name: '' },
        $__getAtomics: Function { name: '' },
        hasAtomics: Function { name: 'hasAtomics' },
        _mapCast: Function { name: '' },
        push: Function { name: '' },
        nonAtomicPush: Function { name: '' },
        $pop: Function { name: '' },
        pop: Function { name: '' },
        $shift: Function { name: '$shift' },
        shift: Function { name: '' },
        pull: Function { name: '' },
        splice: Function { name: 'splice' },
        unshift: Function { name: '' },
        sort: Function { name: '' },
        addToSet: Function { name: 'addToSet' },
        set: Function { name: 'set' },
        toObject: Function { name: '' },
        inspect: Function { name: '' },
        indexOf: Function { name: 'indexOf' },
        remove: Function { name: '' },
        id: Function { name: '' },
        create: Function { name: '' },
        notify: Function { name: 'notify' },
        isMongooseArray: true,
        isMongooseDocumentArray: true,
        validators: Array [],
        _schema: DocumentArray {
          casterConstructor: Function {
            schema: Schema {
              obj: Object {
                day: Function { name: 'Date' },
                time: Function { name: 'Number' },
                description: Function { name: 'String' }
              },
              paths: Object {
                day: SchemaDate {
                  path: 'day',
                  instance: 'Date',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                  _index: null
                },
                time: SchemaNumber {
                  path: 'time',
                  instance: 'Number',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object {
                    type: Function { name: 'Number' },
                    runSettersOnQuery: undefined
                  },
                  _index: null
                },
                description: SchemaString {
                  enumValues: Array [],
                  regExp: null,
                  path: 'description',
                  instance: 'String',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object {
                    type: Function { name: 'String' },
                    runSettersOnQuery: undefined
                  },
                  _index: null
                },
                _id: ObjectId {
                  path: '_id',
                  instance: 'ObjectID',
                  validators: Array [],
                  setters: Array [ Function { name: 'resetId' } ],
                  getters: Array [],
                  options: Object {
                    auto: true,
                    type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                    runSettersOnQuery: undefined
                  },
                  _index: null,
                  defaultValue: Function { name: 'defaultId' }
                }
              },
              subpaths: Object {},
              virtuals: Object {
                id: VirtualType {
                  path: 'id',
                  getters: Array [ Function { name: 'idGetter' } ],
                  setters: Array [],
                  options: Object {}
                }
              },
              singleNestedPaths: Object {},
              nested: Object {},
              inherits: Object {},
              callQueue: Array [
                Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                Array [
                  'pre',
                  Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
                ],
                Array [
                  'pre',
                  Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
                ],
                Array [ 'on', Array [ 'init', Function { name: '' } ] ],
                Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
                Array [ 'on', Array [ 'save', Function { name: '' } ] ]
              ],
              _indexes: Array [],
              methods: Object {},
              statics: Object {},
              tree: Object {
                day: Function { name: 'Date' },
                time: Function { name: 'Number' },
                description: Function { name: 'String' },
                _id: Object {
                  type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                  auto: true
                },
                id: VirtualType {
                  path: 'id',
                  getters: Array [ Function { name: 'idGetter' } ],
                  setters: Array [],
                  options: Object {}
                }
              },
              query: Object {},
              childSchemas: Array [],
              plugins: Array [
                Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                Object {
                  fn: Function {
                    storeShard: Function { name: 'storeShard' },
                    name: 'shardingPlugin'
                  },
                  opts: Object { deduplicate: true }
                }
              ],
              s: Object {
                hooks: Kareem { _pres: Object {}, _posts: Object {} },
                kareemHooks: Object {
                  count: true,
                  find: true,
                  findOne: true,
                  findOneAndUpdate: true,
                  findOneAndRemove: true,
                  insertMany: true,
                  update: true,
                  updateMany: true,
                  updateOne: true
                }
              },
              options: Object {
                minimize: true,
                typeKey: 'type',
                strict: true,
                retainKeyOrder: false,
                id: true,
                noVirtualId: false,
                _id: true,
                noId: false,
                validateBeforeSave: true,
                read: null,
                shardKey: null,
                autoIndex: null,
                discriminatorKey: '__t',
                versionKey: '__v',
                capped: false,
                bufferCommands: true
              },
              $implicitlyCreated: true,
              $globalPluginsApplied: true,
              _requiredpaths: Array []
            },
            $isArraySubdocument: true,
            domain: undefined,
            _events: undefined,
            _maxListeners: undefined,
            setMaxListeners: Function { name: 'setMaxListeners' },
            getMaxListeners: Function { name: 'getMaxListeners' },
            emit: Function { name: 'emit' },
            addListener: Function { name: 'addListener' },
            on: Function { name: 'addListener' },
            once: Function { name: 'once' },
            removeListener: Function { name: 'removeListener' },
            removeAllListeners: Function { name: 'removeAllListeners' },
            listeners: Function { name: 'listeners' },
            listenerCount: Function { name: 'listenerCount' },
            options: Object {
              type: Array [
                Object {
                  day: Function { name: 'Date' },
                  time: Function { name: 'Number' },
                  description: Function { name: 'String' }
                }
              ]
            },
            path: 'data',
            name: 'EmbeddedDocument'
          },
          caster: Function {
            schema: Schema {
              obj: Object {
                day: Function { name: 'Date' },
                time: Function { name: 'Number' },
                description: Function { name: 'String' }
              },
              paths: Object {
                day: SchemaDate {
                  path: 'day',
                  instance: 'Date',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                  _index: null
                },
                time: SchemaNumber {
                  path: 'time',
                  instance: 'Number',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object {
                    type: Function { name: 'Number' },
                    runSettersOnQuery: undefined
                  },
                  _index: null
                },
                description: SchemaString {
                  enumValues: Array [],
                  regExp: null,
                  path: 'description',
                  instance: 'String',
                  validators: Array [],
                  setters: Array [],
                  getters: Array [],
                  options: Object {
                    type: Function { name: 'String' },
                    runSettersOnQuery: undefined
                  },
                  _index: null
                },
                _id: ObjectId {
                  path: '_id',
                  instance: 'ObjectID',
                  validators: Array [],
                  setters: Array [ Function { name: 'resetId' } ],
                  getters: Array [],
                  options: Object {
                    auto: true,
                    type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                    runSettersOnQuery: undefined
                  },
                  _index: null,
                  defaultValue: Function { name: 'defaultId' }
                }
              },
              subpaths: Object {},
              virtuals: Object {
                id: VirtualType {
                  path: 'id',
                  getters: Array [ Function { name: 'idGetter' } ],
                  setters: Array [],
                  options: Object {}
                }
              },
              singleNestedPaths: Object {},
              nested: Object {},
              inherits: Object {},
              callQueue: Array [
                Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                Array [
                  'pre',
                  Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
                ],
                Array [
                  'pre',
                  Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
                ],
                Array [ 'on', Array [ 'init', Function { name: '' } ] ],
                Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
                Array [ 'on', Array [ 'save', Function { name: '' } ] ]
              ],
              _indexes: Array [],
              methods: Object {},
              statics: Object {},
              tree: Object {
                day: Function { name: 'Date' },
                time: Function { name: 'Number' },
                description: Function { name: 'String' },
                _id: Object {
                  type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                  auto: true
                },
                id: VirtualType {
                  path: 'id',
                  getters: Array [ Function { name: 'idGetter' } ],
                  setters: Array [],
                  options: Object {}
                }
              },
              query: Object {},
              childSchemas: Array [],
              plugins: Array [
                Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                Object {
                  fn: Function {
                    storeShard: Function { name: 'storeShard' },
                    name: 'shardingPlugin'
                  },
                  opts: Object { deduplicate: true }
                }
              ],
              s: Object {
                hooks: Kareem { _pres: Object {}, _posts: Object {} },
                kareemHooks: Object {
                  count: true,
                  find: true,
                  findOne: true,
                  findOneAndUpdate: true,
                  findOneAndRemove: true,
                  insertMany: true,
                  update: true,
                  updateMany: true,
                  updateOne: true
                }
              },
              options: Object {
                minimize: true,
                typeKey: 'type',
                strict: true,
                retainKeyOrder: false,
                id: true,
                noVirtualId: false,
                _id: true,
                noId: false,
                validateBeforeSave: true,
                read: null,
                shardKey: null,
                autoIndex: null,
                discriminatorKey: '__t',
                versionKey: '__v',
                capped: false,
                bufferCommands: true
              },
              $implicitlyCreated: true,
              $globalPluginsApplied: true,
              _requiredpaths: Array []
            },
            $isArraySubdocument: true,
            domain: undefined,
            _events: undefined,
            _maxListeners: undefined,
            setMaxListeners: Function { name: 'setMaxListeners' },
            getMaxListeners: Function { name: 'getMaxListeners' },
            emit: Function { name: 'emit' },
            addListener: Function { name: 'addListener' },
            on: Function { name: 'addListener' },
            once: Function { name: 'once' },
            removeListener: Function { name: 'removeListener' },
            removeAllListeners: Function { name: 'removeAllListeners' },
            listeners: Function { name: 'listeners' },
            listenerCount: Function { name: 'listenerCount' },
            options: Object {
              type: Array [
                Object {
                  day: Function { name: 'Date' },
                  time: Function { name: 'Number' },
                  description: Function { name: 'String' }
                }
              ]
            },
            path: 'data',
            name: 'EmbeddedDocument'
          },
          $isMongooseArray: true,
          path: 'data',
          instance: 'Array',
          validators: Array [],
          setters: Array [],
          getters: Array [],
          options: Object {
            type: Array [
              Object {
                day: Function { name: 'Date' },
                time: Function { name: 'Number' },
                description: Function { name: 'String' }
              }
            ]
          },
          _index: null,
          defaultValue: Function { name: '' },
          schema: Schema {
            obj: Object {
              day: Function { name: 'Date' },
              time: Function { name: 'Number' },
              description: Function { name: 'String' }
            },
            paths: Object {
              day: SchemaDate {
                path: 'day',
                instance: 'Date',
                validators: Array [],
                setters: Array [],
                getters: Array [],
                options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                _index: null
              },
              time: SchemaNumber {
                path: 'time',
                instance: 'Number',
                validators: Array [],
                setters: Array [],
                getters: Array [],
                options: Object {
                  type: Function { name: 'Number' },
                  runSettersOnQuery: undefined
                },
                _index: null
              },
              description: SchemaString {
                enumValues: Array [],
                regExp: null,
                path: 'description',
                instance: 'String',
                validators: Array [],
                setters: Array [],
                getters: Array [],
                options: Object {
                  type: Function { name: 'String' },
                  runSettersOnQuery: undefined
                },
                _index: null
              },
              _id: ObjectId {
                path: '_id',
                instance: 'ObjectID',
                validators: Array [],
                setters: Array [ Function { name: 'resetId' } ],
                getters: Array [],
                options: Object {
                  auto: true,
                  type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                  runSettersOnQuery: undefined
                },
                _index: null,
                defaultValue: Function { name: 'defaultId' }
              }
            },
            subpaths: Object {},
            virtuals: Object {
              id: VirtualType {
                path: 'id',
                getters: Array [ Function { name: 'idGetter' } ],
                setters: Array [],
                options: Object {}
              }
            },
            singleNestedPaths: Object {},
            nested: Object {},
            inherits: Object {},
            callQueue: Array [
              Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
              Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
              Array [
                'pre',
                Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
              ],
              Array [
                'pre',
                Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
              ],
              Array [ 'on', Array [ 'init', Function { name: '' } ] ],
              Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
              Array [ 'on', Array [ 'save', Function { name: '' } ] ]
            ],
            _indexes: Array [],
            methods: Object {},
            statics: Object {},
            tree: Object {
              day: Function { name: 'Date' },
              time: Function { name: 'Number' },
              description: Function { name: 'String' },
              _id: Object {
                type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                auto: true
              },
              id: VirtualType {
                path: 'id',
                getters: Array [ Function { name: 'idGetter' } ],
                setters: Array [],
                options: Object {}
              }
            },
            query: Object {},
            childSchemas: Array [],
            plugins: Array [
              Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
              Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
              Object {
                fn: Function {
                  storeShard: Function { name: 'storeShard' },
                  name: 'shardingPlugin'
                },
                opts: Object { deduplicate: true }
              }
            ],
            s: Object {
              hooks: Kareem { _pres: Object {}, _posts: Object {} },
              kareemHooks: Object {
                count: true,
                find: true,
                findOne: true,
                findOneAndUpdate: true,
                findOneAndRemove: true,
                insertMany: true,
                update: true,
                updateMany: true,
                updateOne: true
              }
            },
            options: Object {
              minimize: true,
              typeKey: 'type',
              strict: true,
              retainKeyOrder: false,
              id: true,
              noVirtualId: false,
              _id: true,
              noId: false,
              validateBeforeSave: true,
              read: null,
              shardKey: null,
              autoIndex: null,
              discriminatorKey: '__t',
              versionKey: '__v',
              capped: false,
              bufferCommands: true
            },
            $implicitlyCreated: true,
            $globalPluginsApplied: true,
            _requiredpaths: Array []
          },
          $isMongooseDocumentArray: true
        },
        _handlers: Object {
          isNew: Function { name: 'notify' },
          save: Function { name: 'notify' }
        }
      ],
      __parent: model {
        $__: InternalCache {
          strictMode: true,
          selected: Object {},
          shardval: undefined,
          saveError: undefined,
          validationError: undefined,
          adhocPaths: undefined,
          removing: undefined,
          inserting: undefined,
          version: undefined,
          getters: Object {},
          _id: undefined,
          populate: undefined,
          populated: undefined,
          wasPopulated: false,
          scope: undefined,
          activePaths: StateMachine {
            paths: Object {
              data: 'init',
              __v: 'init',
              monthEnd: 'init',
              projectId: 'init',
              userId: 'init',
              _id: 'init'
            },
            states: Object {
              ignore: Object {},
              default: Object {},
              init: Object {
                __v: true,
                data: true,
                monthEnd: true,
                projectId: true,
                userId: true,
                _id: true
              },
              modify: Object {},
              require: Object {}
            },
            stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
          },
          ownerDocument: undefined,
          fullPath: undefined,
          emitter: EventEmitter {
            domain: null,
            _events: Object {
              save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
              isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
            },
            _eventsCount: 2,
            _maxListeners: 0
          }
        },
        isNew: false,
        errors: undefined,
        _doc: Object {
          data: Array [
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 0,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-01 00:00:00.000 -0500,
                time: 5,
                description: 'Updated the description',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 94 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 1,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-02 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 93 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 2,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-03 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 92 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 3,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-04 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 91 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 4,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-05 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 90 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 5,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-06 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8f ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 6,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-07 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8e ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 7,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-08 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8d ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 8,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-09 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8c ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 9,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-10 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8b ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 10,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-11 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8a ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 11,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-12 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 89 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 12,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-13 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 88 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 13,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-14 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 87 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 14,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-15 00:00:00.000 -0500,
                time: 5,
                description: 'Updated the description',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 86 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 15,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-16 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 85 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 16,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-17 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 84 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 17,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-18 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 83 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 18,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-19 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 82 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 19,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-20 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 81 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 20,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-21 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 80 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 21,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-22 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7f ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 22,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-23 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7e ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 23,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-24 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7d ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 24,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-25 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7c ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 25,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-26 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7b ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 26,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-27 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7a ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 27,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-28 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 79 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 28,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-29 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 78 ]
                }
              },
              $init: true
            },
            EmbeddedDocument {
              __parentArray: [Circular],
              __parent: [Circular],
              __index: 29,
              $__: InternalCache {
                strictMode: true,
                selected: undefined,
                shardval: undefined,
                saveError: undefined,
                validationError: undefined,
                adhocPaths: undefined,
                removing: undefined,
                inserting: undefined,
                version: undefined,
                getters: Object {},
                _id: undefined,
                populate: undefined,
                populated: undefined,
                wasPopulated: false,
                scope: undefined,
                activePaths: StateMachine {
                  paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                  states: Object {
                    ignore: Object {},
                    default: Object {},
                    init: Object { day: true, time: true, description: true, _id: true },
                    modify: Object {},
                    require: Object {}
                  },
                  stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                },
                ownerDocument: [Circular],
                fullPath: 'data',
                emitter: EventEmitter {
                  domain: null,
                  _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                  _eventsCount: 2,
                  _maxListeners: 0
                }
              },
              isNew: false,
              errors: undefined,
              _doc: Object {
                day: 2017-12-30 00:00:00.000 -0500,
                time: 0,
                description: '',
                _id: ObjectID {
                  _bsontype: 'ObjectID',
                  id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 77 ]
                }
              },
              $init: true
            },
            [Circular],
            _path: 'data',
            toBSON: Function { name: '' },
            _atomics: Object {},
            _parent: [Circular],
            _cast: Function { name: '' },
            _markModified: Function { name: '' },
            _registerAtomic: Function { name: '' },
            $__getAtomics: Function { name: '' },
            hasAtomics: Function { name: 'hasAtomics' },
            _mapCast: Function { name: '' },
            push: Function { name: '' },
            nonAtomicPush: Function { name: '' },
            $pop: Function { name: '' },
            pop: Function { name: '' },
            $shift: Function { name: '$shift' },
            shift: Function { name: '' },
            pull: Function { name: '' },
            splice: Function { name: 'splice' },
            unshift: Function { name: '' },
            sort: Function { name: '' },
            addToSet: Function { name: 'addToSet' },
            set: Function { name: 'set' },
            toObject: Function { name: '' },
            inspect: Function { name: '' },
            indexOf: Function { name: 'indexOf' },
            remove: Function { name: '' },
            id: Function { name: '' },
            create: Function { name: '' },
            notify: Function { name: 'notify' },
            isMongooseArray: true,
            isMongooseDocumentArray: true,
            validators: Array [],
            _schema: DocumentArray {
              casterConstructor: Function {
                schema: Schema {
                  obj: Object {
                    day: Function { name: 'Date' },
                    time: Function { name: 'Number' },
                    description: Function { name: 'String' }
                  },
                  paths: Object {
                    day: SchemaDate {
                      path: 'day',
                      instance: 'Date',
                      validators: Array [],
                      setters: Array [],
                      getters: Array [],
                      options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                      _index: null
                    },
                    time: SchemaNumber {
                      path: 'time',
                      instance: 'Number',
                      validators: Array [],
                      setters: Array [],
                      getters: Array [],
                      options: Object {
                        type: Function { name: 'Number' },
                        runSettersOnQuery: undefined
                      },
                      _index: null
                    },
                    description: SchemaString {
                      enumValues: Array [],
                      regExp: null,
                      path: 'description',
                      instance: 'String',
                      validators: Array [],
                      setters: Array [],
                      getters: Array [],
                      options: Object {
                        type: Function { name: 'String' },
                        runSettersOnQuery: undefined
                      },
                      _index: null
                    },
                    _id: ObjectId {
                      path: '_id',
                      instance: 'ObjectID',
                      validators: Array [],
                      setters: Array [ Function { name: 'resetId' } ],
                      getters: Array [],
                      options: Object {
                        auto: true,
                        type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                        runSettersOnQuery: undefined
                      },
                      _index: null,
                      defaultValue: Function { name: 'defaultId' }
                    }
                  },
                  subpaths: Object {},
                  virtuals: Object {
                    id: VirtualType {
                      path: 'id',
                      getters: Array [ Function { name: 'idGetter' } ],
                      setters: Array [],
                      options: Object {}
                    }
                  },
                  singleNestedPaths: Object {},
                  nested: Object {},
                  inherits: Object {},
                  callQueue: Array [
                    Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                    Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                    Array [
                      'pre',
                      Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
                    ],
                    Array [
                      'pre',
                      Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
                    ],
                    Array [ 'on', Array [ 'init', Function { name: '' } ] ],
                    Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
                    Array [ 'on', Array [ 'save', Function { name: '' } ] ]
                  ],
                  _indexes: Array [],
                  methods: Object {},
                  statics: Object {},
                  tree: Object {
                    day: Function { name: 'Date' },
                    time: Function { name: 'Number' },
                    description: Function { name: 'String' },
                    _id: Object {
                      type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                      auto: true
                    },
                    id: VirtualType {
                      path: 'id',
                      getters: Array [ Function { name: 'idGetter' } ],
                      setters: Array [],
                      options: Object {}
                    }
                  },
                  query: Object {},
                  childSchemas: Array [],
                  plugins: Array [
                    Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                    Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                    Object {
                      fn: Function {
                        storeShard: Function { name: 'storeShard' },
                        name: 'shardingPlugin'
                      },
                      opts: Object { deduplicate: true }
                    }
                  ],
                  s: Object {
                    hooks: Kareem { _pres: Object {}, _posts: Object {} },
                    kareemHooks: Object {
                      count: true,
                      find: true,
                      findOne: true,
                      findOneAndUpdate: true,
                      findOneAndRemove: true,
                      insertMany: true,
                      update: true,
                      updateMany: true,
                      updateOne: true
                    }
                  },
                  options: Object {
                    minimize: true,
                    typeKey: 'type',
                    strict: true,
                    retainKeyOrder: false,
                    id: true,
                    noVirtualId: false,
                    _id: true,
                    noId: false,
                    validateBeforeSave: true,
                    read: null,
                    shardKey: null,
                    autoIndex: null,
                    discriminatorKey: '__t',
                    versionKey: '__v',
                    capped: false,
                    bufferCommands: true
                  },
                  $implicitlyCreated: true,
                  $globalPluginsApplied: true,
                  _requiredpaths: Array []
                },
                $isArraySubdocument: true,
                domain: undefined,
                _events: undefined,
                _maxListeners: undefined,
                setMaxListeners: Function { name: 'setMaxListeners' },
                getMaxListeners: Function { name: 'getMaxListeners' },
                emit: Function { name: 'emit' },
                addListener: Function { name: 'addListener' },
                on: Function { name: 'addListener' },
                once: Function { name: 'once' },
                removeListener: Function { name: 'removeListener' },
                removeAllListeners: Function { name: 'removeAllListeners' },
                listeners: Function { name: 'listeners' },
                listenerCount: Function { name: 'listenerCount' },
                options: Object {
                  type: Array [
                    Object {
                      day: Function { name: 'Date' },
                      time: Function { name: 'Number' },
                      description: Function { name: 'String' }
                    }
                  ]
                },
                path: 'data',
                name: 'EmbeddedDocument'
              },
              caster: Function {
                schema: Schema {
                  obj: Object {
                    day: Function { name: 'Date' },
                    time: Function { name: 'Number' },
                    description: Function { name: 'String' }
                  },
                  paths: Object {
                    day: SchemaDate {
                      path: 'day',
                      instance: 'Date',
                      validators: Array [],
                      setters: Array [],
                      getters: Array [],
                      options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                      _index: null
                    },
                    time: SchemaNumber {
                      path: 'time',
                      instance: 'Number',
                      validators: Array [],
                      setters: Array [],
                      getters: Array [],
                      options: Object {
                        type: Function { name: 'Number' },
                        runSettersOnQuery: undefined
                      },
                      _index: null
                    },
                    description: SchemaString {
                      enumValues: Array [],
                      regExp: null,
                      path: 'description',
                      instance: 'String',
                      validators: Array [],
                      setters: Array [],
                      getters: Array [],
                      options: Object {
                        type: Function { name: 'String' },
                        runSettersOnQuery: undefined
                      },
                      _index: null
                    },
                    _id: ObjectId {
                      path: '_id',
                      instance: 'ObjectID',
                      validators: Array [],
                      setters: Array [ Function { name: 'resetId' } ],
                      getters: Array [],
                      options: Object {
                        auto: true,
                        type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                        runSettersOnQuery: undefined
                      },
                      _index: null,
                      defaultValue: Function { name: 'defaultId' }
                    }
                  },
                  subpaths: Object {},
                  virtuals: Object {
                    id: VirtualType {
                      path: 'id',
                      getters: Array [ Function { name: 'idGetter' } ],
                      setters: Array [],
                      options: Object {}
                    }
                  },
                  singleNestedPaths: Object {},
                  nested: Object {},
                  inherits: Object {},
                  callQueue: Array [
                    Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                    Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                    Array [
                      'pre',
                      Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
                    ],
                    Array [
                      'pre',
                      Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
                    ],
                    Array [ 'on', Array [ 'init', Function { name: '' } ] ],
                    Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
                    Array [ 'on', Array [ 'save', Function { name: '' } ] ]
                  ],
                  _indexes: Array [],
                  methods: Object {},
                  statics: Object {},
                  tree: Object {
                    day: Function { name: 'Date' },
                    time: Function { name: 'Number' },
                    description: Function { name: 'String' },
                    _id: Object {
                      type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                      auto: true
                    },
                    id: VirtualType {
                      path: 'id',
                      getters: Array [ Function { name: 'idGetter' } ],
                      setters: Array [],
                      options: Object {}
                    }
                  },
                  query: Object {},
                  childSchemas: Array [],
                  plugins: Array [
                    Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                    Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                    Object {
                      fn: Function {
                        storeShard: Function { name: 'storeShard' },
                        name: 'shardingPlugin'
                      },
                      opts: Object { deduplicate: true }
                    }
                  ],
                  s: Object {
                    hooks: Kareem { _pres: Object {}, _posts: Object {} },
                    kareemHooks: Object {
                      count: true,
                      find: true,
                      findOne: true,
                      findOneAndUpdate: true,
                      findOneAndRemove: true,
                      insertMany: true,
                      update: true,
                      updateMany: true,
                      updateOne: true
                    }
                  },
                  options: Object {
                    minimize: true,
                    typeKey: 'type',
                    strict: true,
                    retainKeyOrder: false,
                    id: true,
                    noVirtualId: false,
                    _id: true,
                    noId: false,
                    validateBeforeSave: true,
                    read: null,
                    shardKey: null,
                    autoIndex: null,
                    discriminatorKey: '__t',
                    versionKey: '__v',
                    capped: false,
                    bufferCommands: true
                  },
                  $implicitlyCreated: true,
                  $globalPluginsApplied: true,
                  _requiredpaths: Array []
                },
                $isArraySubdocument: true,
                domain: undefined,
                _events: undefined,
                _maxListeners: undefined,
                setMaxListeners: Function { name: 'setMaxListeners' },
                getMaxListeners: Function { name: 'getMaxListeners' },
                emit: Function { name: 'emit' },
                addListener: Function { name: 'addListener' },
                on: Function { name: 'addListener' },
                once: Function { name: 'once' },
                removeListener: Function { name: 'removeListener' },
                removeAllListeners: Function { name: 'removeAllListeners' },
                listeners: Function { name: 'listeners' },
                listenerCount: Function { name: 'listenerCount' },
                options: Object {
                  type: Array [
                    Object {
                      day: Function { name: 'Date' },
                      time: Function { name: 'Number' },
                      description: Function { name: 'String' }
                    }
                  ]
                },
                path: 'data',
                name: 'EmbeddedDocument'
              },
              $isMongooseArray: true,
              path: 'data',
              instance: 'Array',
              validators: Array [],
              setters: Array [],
              getters: Array [],
              options: Object {
                type: Array [
                  Object {
                    day: Function { name: 'Date' },
                    time: Function { name: 'Number' },
                    description: Function { name: 'String' }
                  }
                ]
              },
              _index: null,
              defaultValue: Function { name: '' },
              schema: Schema {
                obj: Object {
                  day: Function { name: 'Date' },
                  time: Function { name: 'Number' },
                  description: Function { name: 'String' }
                },
                paths: Object {
                  day: SchemaDate {
                    path: 'day',
                    instance: 'Date',
                    validators: Array [],
                    setters: Array [],
                    getters: Array [],
                    options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                    _index: null
                  },
                  time: SchemaNumber {
                    path: 'time',
                    instance: 'Number',
                    validators: Array [],
                    setters: Array [],
                    getters: Array [],
                    options: Object {
                      type: Function { name: 'Number' },
                      runSettersOnQuery: undefined
                    },
                    _index: null
                  },
                  description: SchemaString {
                    enumValues: Array [],
                    regExp: null,
                    path: 'description',
                    instance: 'String',
                    validators: Array [],
                    setters: Array [],
                    getters: Array [],
                    options: Object {
                      type: Function { name: 'String' },
                      runSettersOnQuery: undefined
                    },
                    _index: null
                  },
                  _id: ObjectId {
                    path: '_id',
                    instance: 'ObjectID',
                    validators: Array [],
                    setters: Array [ Function { name: 'resetId' } ],
                    getters: Array [],
                    options: Object {
                      auto: true,
                      type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                      runSettersOnQuery: undefined
                    },
                    _index: null,
                    defaultValue: Function { name: 'defaultId' }
                  }
                },
                subpaths: Object {},
                virtuals: Object {
                  id: VirtualType {
                    path: 'id',
                    getters: Array [ Function { name: 'idGetter' } ],
                    setters: Array [],
                    options: Object {}
                  }
                },
                singleNestedPaths: Object {},
                nested: Object {},
                inherits: Object {},
                callQueue: Array [
                  Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                  Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                  Array [
                    'pre',
                    Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
                  ],
                  Array [
                    'pre',
                    Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
                  ],
                  Array [ 'on', Array [ 'init', Function { name: '' } ] ],
                  Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
                  Array [ 'on', Array [ 'save', Function { name: '' } ] ]
                ],
                _indexes: Array [],
                methods: Object {},
                statics: Object {},
                tree: Object {
                  day: Function { name: 'Date' },
                  time: Function { name: 'Number' },
                  description: Function { name: 'String' },
                  _id: Object {
                    type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                    auto: true
                  },
                  id: VirtualType {
                    path: 'id',
                    getters: Array [ Function { name: 'idGetter' } ],
                    setters: Array [],
                    options: Object {}
                  }
                },
                query: Object {},
                childSchemas: Array [],
                plugins: Array [
                  Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                  Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                  Object {
                    fn: Function {
                      storeShard: Function { name: 'storeShard' },
                      name: 'shardingPlugin'
                    },
                    opts: Object { deduplicate: true }
                  }
                ],
                s: Object {
                  hooks: Kareem { _pres: Object {}, _posts: Object {} },
                  kareemHooks: Object {
                    count: true,
                    find: true,
                    findOne: true,
                    findOneAndUpdate: true,
                    findOneAndRemove: true,
                    insertMany: true,
                    update: true,
                    updateMany: true,
                    updateOne: true
                  }
                },
                options: Object {
                  minimize: true,
                  typeKey: 'type',
                  strict: true,
                  retainKeyOrder: false,
                  id: true,
                  noVirtualId: false,
                  _id: true,
                  noId: false,
                  validateBeforeSave: true,
                  read: null,
                  shardKey: null,
                  autoIndex: null,
                  discriminatorKey: '__t',
                  versionKey: '__v',
                  capped: false,
                  bufferCommands: true
                },
                $implicitlyCreated: true,
                $globalPluginsApplied: true,
                _requiredpaths: Array []
              },
              $isMongooseDocumentArray: true
            },
            _handlers: Object {
              isNew: Function { name: 'notify' },
              save: Function { name: 'notify' }
            }
          ],
          __v: 0,
          monthEnd: 2017-12-31 00:00:00.000 -0500,
          projectId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
          },
          userId: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
          },
          _id: ObjectID {
            _bsontype: 'ObjectID',
            id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
          }
        },
        $init: true
      },
      __index: 30,
      $__: InternalCache {
        strictMode: true,
        selected: undefined,
        shardval: undefined,
        saveError: undefined,
        validationError: undefined,
        adhocPaths: undefined,
        removing: undefined,
        inserting: undefined,
        version: undefined,
        getters: Object {},
        _id: undefined,
        populate: undefined,
        populated: undefined,
        wasPopulated: false,
        scope: undefined,
        activePaths: StateMachine {
          paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
          states: Object {
            ignore: Object {},
            default: Object {},
            init: Object { day: true, time: true, description: true, _id: true },
            modify: Object {},
            require: Object {}
          },
          stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
        },
        ownerDocument: model {
          $__: InternalCache {
            strictMode: true,
            selected: Object {},
            shardval: undefined,
            saveError: undefined,
            validationError: undefined,
            adhocPaths: undefined,
            removing: undefined,
            inserting: undefined,
            version: undefined,
            getters: Object {},
            _id: undefined,
            populate: undefined,
            populated: undefined,
            wasPopulated: false,
            scope: undefined,
            activePaths: StateMachine {
              paths: Object {
                data: 'init',
                __v: 'init',
                monthEnd: 'init',
                projectId: 'init',
                userId: 'init',
                _id: 'init'
              },
              states: Object {
                ignore: Object {},
                default: Object {},
                init: Object {
                  __v: true,
                  data: true,
                  monthEnd: true,
                  projectId: true,
                  userId: true,
                  _id: true
                },
                modify: Object {},
                require: Object {}
              },
              stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
            },
            ownerDocument: undefined,
            fullPath: undefined,
            emitter: EventEmitter {
              domain: null,
              _events: Object {
                save: Array [ Function { name: 'notify' }, Function { name: 'notify' } ],
                isNew: Array [ Function { name: 'notify' }, Function { name: 'notify' } ]
              },
              _eventsCount: 2,
              _maxListeners: 0
            }
          },
          isNew: false,
          errors: undefined,
          _doc: Object {
            data: Array [
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 0,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-01 00:00:00.000 -0500,
                  time: 5,
                  description: 'Updated the description',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 94 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 1,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-02 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 93 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 2,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-03 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 92 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 3,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-04 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 91 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 4,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-05 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 90 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 5,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-06 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8f ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 6,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-07 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8e ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 7,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-08 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8d ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 8,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-09 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8c ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 9,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-10 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8b ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 10,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-11 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 8a ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 11,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-12 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 89 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 12,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-13 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 88 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 13,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-14 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 87 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 14,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-15 00:00:00.000 -0500,
                  time: 5,
                  description: 'Updated the description',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 86 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 15,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-16 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 85 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 16,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-17 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 84 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 17,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-18 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 83 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 18,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-19 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 82 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 19,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-20 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 81 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 20,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-21 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 80 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 21,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-22 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7f ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 22,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-23 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7e ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 23,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-24 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7d ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 24,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-25 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7c ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 25,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-26 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7b ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 26,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-27 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 7a ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 27,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-28 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 79 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 28,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-29 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 78 ]
                  }
                },
                $init: true
              },
              EmbeddedDocument {
                __parentArray: [Circular],
                __parent: [Circular],
                __index: 29,
                $__: InternalCache {
                  strictMode: true,
                  selected: undefined,
                  shardval: undefined,
                  saveError: undefined,
                  validationError: undefined,
                  adhocPaths: undefined,
                  removing: undefined,
                  inserting: undefined,
                  version: undefined,
                  getters: Object {},
                  _id: undefined,
                  populate: undefined,
                  populated: undefined,
                  wasPopulated: false,
                  scope: undefined,
                  activePaths: StateMachine {
                    paths: Object { day: 'init', time: 'init', description: 'init', _id: 'init' },
                    states: Object {
                      ignore: Object {},
                      default: Object {},
                      init: Object { day: true, time: true, description: true, _id: true },
                      modify: Object {},
                      require: Object {}
                    },
                    stateNames: Array [ 'require', 'modify', 'init', 'default', 'ignore' ]
                  },
                  ownerDocument: [Circular],
                  fullPath: 'data',
                  emitter: EventEmitter {
                    domain: null,
                    _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
                    _eventsCount: 2,
                    _maxListeners: 0
                  }
                },
                isNew: false,
                errors: undefined,
                _doc: Object {
                  day: 2017-12-30 00:00:00.000 -0500,
                  time: 0,
                  description: '',
                  _id: ObjectID {
                    _bsontype: 'ObjectID',
                    id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 77 ]
                  }
                },
                $init: true
              },
              [Circular],
              _path: 'data',
              toBSON: Function { name: '' },
              _atomics: Object {},
              _parent: [Circular],
              _cast: Function { name: '' },
              _markModified: Function { name: '' },
              _registerAtomic: Function { name: '' },
              $__getAtomics: Function { name: '' },
              hasAtomics: Function { name: 'hasAtomics' },
              _mapCast: Function { name: '' },
              push: Function { name: '' },
              nonAtomicPush: Function { name: '' },
              $pop: Function { name: '' },
              pop: Function { name: '' },
              $shift: Function { name: '$shift' },
              shift: Function { name: '' },
              pull: Function { name: '' },
              splice: Function { name: 'splice' },
              unshift: Function { name: '' },
              sort: Function { name: '' },
              addToSet: Function { name: 'addToSet' },
              set: Function { name: 'set' },
              toObject: Function { name: '' },
              inspect: Function { name: '' },
              indexOf: Function { name: 'indexOf' },
              remove: Function { name: '' },
              id: Function { name: '' },
              create: Function { name: '' },
              notify: Function { name: 'notify' },
              isMongooseArray: true,
              isMongooseDocumentArray: true,
              validators: Array [],
              _schema: DocumentArray {
                casterConstructor: Function {
                  schema: Schema {
                    obj: Object {
                      day: Function { name: 'Date' },
                      time: Function { name: 'Number' },
                      description: Function { name: 'String' }
                    },
                    paths: Object {
                      day: SchemaDate {
                        path: 'day',
                        instance: 'Date',
                        validators: Array [],
                        setters: Array [],
                        getters: Array [],
                        options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                        _index: null
                      },
                      time: SchemaNumber {
                        path: 'time',
                        instance: 'Number',
                        validators: Array [],
                        setters: Array [],
                        getters: Array [],
                        options: Object {
                          type: Function { name: 'Number' },
                          runSettersOnQuery: undefined
                        },
                        _index: null
                      },
                      description: SchemaString {
                        enumValues: Array [],
                        regExp: null,
                        path: 'description',
                        instance: 'String',
                        validators: Array [],
                        setters: Array [],
                        getters: Array [],
                        options: Object {
                          type: Function { name: 'String' },
                          runSettersOnQuery: undefined
                        },
                        _index: null
                      },
                      _id: ObjectId {
                        path: '_id',
                        instance: 'ObjectID',
                        validators: Array [],
                        setters: Array [ Function { name: 'resetId' } ],
                        getters: Array [],
                        options: Object {
                          auto: true,
                          type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                          runSettersOnQuery: undefined
                        },
                        _index: null,
                        defaultValue: Function { name: 'defaultId' }
                      }
                    },
                    subpaths: Object {},
                    virtuals: Object {
                      id: VirtualType {
                        path: 'id',
                        getters: Array [ Function { name: 'idGetter' } ],
                        setters: Array [],
                        options: Object {}
                      }
                    },
                    singleNestedPaths: Object {},
                    nested: Object {},
                    inherits: Object {},
                    callQueue: Array [
                      Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                      Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                      Array [
                        'pre',
                        Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
                      ],
                      Array [
                        'pre',
                        Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
                      ],
                      Array [ 'on', Array [ 'init', Function { name: '' } ] ],
                      Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
                      Array [ 'on', Array [ 'save', Function { name: '' } ] ]
                    ],
                    _indexes: Array [],
                    methods: Object {},
                    statics: Object {},
                    tree: Object {
                      day: Function { name: 'Date' },
                      time: Function { name: 'Number' },
                      description: Function { name: 'String' },
                      _id: Object {
                        type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                        auto: true
                      },
                      id: VirtualType {
                        path: 'id',
                        getters: Array [ Function { name: 'idGetter' } ],
                        setters: Array [],
                        options: Object {}
                      }
                    },
                    query: Object {},
                    childSchemas: Array [],
                    plugins: Array [
                      Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                      Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                      Object {
                        fn: Function {
                          storeShard: Function { name: 'storeShard' },
                          name: 'shardingPlugin'
                        },
                        opts: Object { deduplicate: true }
                      }
                    ],
                    s: Object {
                      hooks: Kareem { _pres: Object {}, _posts: Object {} },
                      kareemHooks: Object {
                        count: true,
                        find: true,
                        findOne: true,
                        findOneAndUpdate: true,
                        findOneAndRemove: true,
                        insertMany: true,
                        update: true,
                        updateMany: true,
                        updateOne: true
                      }
                    },
                    options: Object {
                      minimize: true,
                      typeKey: 'type',
                      strict: true,
                      retainKeyOrder: false,
                      id: true,
                      noVirtualId: false,
                      _id: true,
                      noId: false,
                      validateBeforeSave: true,
                      read: null,
                      shardKey: null,
                      autoIndex: null,
                      discriminatorKey: '__t',
                      versionKey: '__v',
                      capped: false,
                      bufferCommands: true
                    },
                    $implicitlyCreated: true,
                    $globalPluginsApplied: true,
                    _requiredpaths: Array []
                  },
                  $isArraySubdocument: true,
                  domain: undefined,
                  _events: undefined,
                  _maxListeners: undefined,
                  setMaxListeners: Function { name: 'setMaxListeners' },
                  getMaxListeners: Function { name: 'getMaxListeners' },
                  emit: Function { name: 'emit' },
                  addListener: Function { name: 'addListener' },
                  on: Function { name: 'addListener' },
                  once: Function { name: 'once' },
                  removeListener: Function { name: 'removeListener' },
                  removeAllListeners: Function { name: 'removeAllListeners' },
                  listeners: Function { name: 'listeners' },
                  listenerCount: Function { name: 'listenerCount' },
                  options: Object {
                    type: Array [
                      Object {
                        day: Function { name: 'Date' },
                        time: Function { name: 'Number' },
                        description: Function { name: 'String' }
                      }
                    ]
                  },
                  path: 'data',
                  name: 'EmbeddedDocument'
                },
                caster: Function {
                  schema: Schema {
                    obj: Object {
                      day: Function { name: 'Date' },
                      time: Function { name: 'Number' },
                      description: Function { name: 'String' }
                    },
                    paths: Object {
                      day: SchemaDate {
                        path: 'day',
                        instance: 'Date',
                        validators: Array [],
                        setters: Array [],
                        getters: Array [],
                        options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                        _index: null
                      },
                      time: SchemaNumber {
                        path: 'time',
                        instance: 'Number',
                        validators: Array [],
                        setters: Array [],
                        getters: Array [],
                        options: Object {
                          type: Function { name: 'Number' },
                          runSettersOnQuery: undefined
                        },
                        _index: null
                      },
                      description: SchemaString {
                        enumValues: Array [],
                        regExp: null,
                        path: 'description',
                        instance: 'String',
                        validators: Array [],
                        setters: Array [],
                        getters: Array [],
                        options: Object {
                          type: Function { name: 'String' },
                          runSettersOnQuery: undefined
                        },
                        _index: null
                      },
                      _id: ObjectId {
                        path: '_id',
                        instance: 'ObjectID',
                        validators: Array [],
                        setters: Array [ Function { name: 'resetId' } ],
                        getters: Array [],
                        options: Object {
                          auto: true,
                          type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                          runSettersOnQuery: undefined
                        },
                        _index: null,
                        defaultValue: Function { name: 'defaultId' }
                      }
                    },
                    subpaths: Object {},
                    virtuals: Object {
                      id: VirtualType {
                        path: 'id',
                        getters: Array [ Function { name: 'idGetter' } ],
                        setters: Array [],
                        options: Object {}
                      }
                    },
                    singleNestedPaths: Object {},
                    nested: Object {},
                    inherits: Object {},
                    callQueue: Array [
                      Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                      Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                      Array [
                        'pre',
                        Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
                      ],
                      Array [
                        'pre',
                        Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
                      ],
                      Array [ 'on', Array [ 'init', Function { name: '' } ] ],
                      Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
                      Array [ 'on', Array [ 'save', Function { name: '' } ] ]
                    ],
                    _indexes: Array [],
                    methods: Object {},
                    statics: Object {},
                    tree: Object {
                      day: Function { name: 'Date' },
                      time: Function { name: 'Number' },
                      description: Function { name: 'String' },
                      _id: Object {
                        type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                        auto: true
                      },
                      id: VirtualType {
                        path: 'id',
                        getters: Array [ Function { name: 'idGetter' } ],
                        setters: Array [],
                        options: Object {}
                      }
                    },
                    query: Object {},
                    childSchemas: Array [],
                    plugins: Array [
                      Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                      Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                      Object {
                        fn: Function {
                          storeShard: Function { name: 'storeShard' },
                          name: 'shardingPlugin'
                        },
                        opts: Object { deduplicate: true }
                      }
                    ],
                    s: Object {
                      hooks: Kareem { _pres: Object {}, _posts: Object {} },
                      kareemHooks: Object {
                        count: true,
                        find: true,
                        findOne: true,
                        findOneAndUpdate: true,
                        findOneAndRemove: true,
                        insertMany: true,
                        update: true,
                        updateMany: true,
                        updateOne: true
                      }
                    },
                    options: Object {
                      minimize: true,
                      typeKey: 'type',
                      strict: true,
                      retainKeyOrder: false,
                      id: true,
                      noVirtualId: false,
                      _id: true,
                      noId: false,
                      validateBeforeSave: true,
                      read: null,
                      shardKey: null,
                      autoIndex: null,
                      discriminatorKey: '__t',
                      versionKey: '__v',
                      capped: false,
                      bufferCommands: true
                    },
                    $implicitlyCreated: true,
                    $globalPluginsApplied: true,
                    _requiredpaths: Array []
                  },
                  $isArraySubdocument: true,
                  domain: undefined,
                  _events: undefined,
                  _maxListeners: undefined,
                  setMaxListeners: Function { name: 'setMaxListeners' },
                  getMaxListeners: Function { name: 'getMaxListeners' },
                  emit: Function { name: 'emit' },
                  addListener: Function { name: 'addListener' },
                  on: Function { name: 'addListener' },
                  once: Function { name: 'once' },
                  removeListener: Function { name: 'removeListener' },
                  removeAllListeners: Function { name: 'removeAllListeners' },
                  listeners: Function { name: 'listeners' },
                  listenerCount: Function { name: 'listenerCount' },
                  options: Object {
                    type: Array [
                      Object {
                        day: Function { name: 'Date' },
                        time: Function { name: 'Number' },
                        description: Function { name: 'String' }
                      }
                    ]
                  },
                  path: 'data',
                  name: 'EmbeddedDocument'
                },
                $isMongooseArray: true,
                path: 'data',
                instance: 'Array',
                validators: Array [],
                setters: Array [],
                getters: Array [],
                options: Object {
                  type: Array [
                    Object {
                      day: Function { name: 'Date' },
                      time: Function { name: 'Number' },
                      description: Function { name: 'String' }
                    }
                  ]
                },
                _index: null,
                defaultValue: Function { name: '' },
                schema: Schema {
                  obj: Object {
                    day: Function { name: 'Date' },
                    time: Function { name: 'Number' },
                    description: Function { name: 'String' }
                  },
                  paths: Object {
                    day: SchemaDate {
                      path: 'day',
                      instance: 'Date',
                      validators: Array [],
                      setters: Array [],
                      getters: Array [],
                      options: Object { type: Function { name: 'Date' }, runSettersOnQuery: undefined },
                      _index: null
                    },
                    time: SchemaNumber {
                      path: 'time',
                      instance: 'Number',
                      validators: Array [],
                      setters: Array [],
                      getters: Array [],
                      options: Object {
                        type: Function { name: 'Number' },
                        runSettersOnQuery: undefined
                      },
                      _index: null
                    },
                    description: SchemaString {
                      enumValues: Array [],
                      regExp: null,
                      path: 'description',
                      instance: 'String',
                      validators: Array [],
                      setters: Array [],
                      getters: Array [],
                      options: Object {
                        type: Function { name: 'String' },
                        runSettersOnQuery: undefined
                      },
                      _index: null
                    },
                    _id: ObjectId {
                      path: '_id',
                      instance: 'ObjectID',
                      validators: Array [],
                      setters: Array [ Function { name: 'resetId' } ],
                      getters: Array [],
                      options: Object {
                        auto: true,
                        type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                        runSettersOnQuery: undefined
                      },
                      _index: null,
                      defaultValue: Function { name: 'defaultId' }
                    }
                  },
                  subpaths: Object {},
                  virtuals: Object {
                    id: VirtualType {
                      path: 'id',
                      getters: Array [ Function { name: 'idGetter' } ],
                      setters: Array [],
                      options: Object {}
                    }
                  },
                  singleNestedPaths: Object {},
                  nested: Object {},
                  inherits: Object {},
                  callQueue: Array [
                    Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                    Array [ 'pre', Array [ 'save', Function { name: '' } ] ],
                    Array [
                      'pre',
                      Arguments [ 'validate', true, Function { isAsync: true, name: '' } ]
                    ],
                    Array [
                      'pre',
                      Arguments [ 'remove', true, Function { isAsync: true, name: '' } ]
                    ],
                    Array [ 'on', Array [ 'init', Function { name: '' } ] ],
                    Array [ 'pre', Arguments [ 'save', Function { name: '' } ] ],
                    Array [ 'on', Array [ 'save', Function { name: '' } ] ]
                  ],
                  _indexes: Array [],
                  methods: Object {},
                  statics: Object {},
                  tree: Object {
                    day: Function { name: 'Date' },
                    time: Function { name: 'Number' },
                    description: Function { name: 'String' },
                    _id: Object {
                      type: Function { schemaName: 'ObjectId', name: 'ObjectId' },
                      auto: true
                    },
                    id: VirtualType {
                      path: 'id',
                      getters: Array [ Function { name: 'idGetter' } ],
                      setters: Array [],
                      options: Object {}
                    }
                  },
                  query: Object {},
                  childSchemas: Array [],
                  plugins: Array [
                    Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                    Object { fn: Function { name: '' }, opts: Object { deduplicate: true } },
                    Object {
                      fn: Function {
                        storeShard: Function { name: 'storeShard' },
                        name: 'shardingPlugin'
                      },
                      opts: Object { deduplicate: true }
                    }
                  ],
                  s: Object {
                    hooks: Kareem { _pres: Object {}, _posts: Object {} },
                    kareemHooks: Object {
                      count: true,
                      find: true,
                      findOne: true,
                      findOneAndUpdate: true,
                      findOneAndRemove: true,
                      insertMany: true,
                      update: true,
                      updateMany: true,
                      updateOne: true
                    }
                  },
                  options: Object {
                    minimize: true,
                    typeKey: 'type',
                    strict: true,
                    retainKeyOrder: false,
                    id: true,
                    noVirtualId: false,
                    _id: true,
                    noId: false,
                    validateBeforeSave: true,
                    read: null,
                    shardKey: null,
                    autoIndex: null,
                    discriminatorKey: '__t',
                    versionKey: '__v',
                    capped: false,
                    bufferCommands: true
                  },
                  $implicitlyCreated: true,
                  $globalPluginsApplied: true,
                  _requiredpaths: Array []
                },
                $isMongooseDocumentArray: true
              },
              _handlers: Object {
                isNew: Function { name: 'notify' },
                save: Function { name: 'notify' }
              }
            ],
            __v: 0,
            monthEnd: 2017-12-31 00:00:00.000 -0500,
            projectId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 35, c1, bb, 1b, 98, 67, cd, 86, 21, bf, 26 ]
            },
            userId: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 38, 19, 93, 37, 7b, 64, bd, 85, 66, 6d, c1 ]
            },
            _id: ObjectID {
              _bsontype: 'ObjectID',
              id: Buffer [ 59, 41, a6, b5, f4, c7, 99, 2c, 4a, 98, 01, 9b ]
            }
          },
          $init: true
        },
        fullPath: 'data',
        emitter: EventEmitter {
          domain: null,
          _events: Object { isNew: Function { name: '' }, save: Function { name: '' } },
          _eventsCount: 2,
          _maxListeners: 0
        }
      },
      isNew: false,
      errors: undefined,
      _doc: Object {
        day: 2017-12-31 00:00:00.000 -0500,
        time: 5,
        description: 'Updated the description',
        _id: ObjectID {
          _bsontype: 'ObjectID',
          id: Buffer [ 59, 41, a6, b6, f4, c7, 99, 2c, 4a, 98, 02, 76 ]
        }
      },
      $init: true
    } to be an instance of Date
      at Assertion.fail (node_modules/should/cjs/should.js:258:17)
      at Assertion.Object.defineProperty.value [as Date] (node_modules/should/cjs/should.js:335:19)
      at test/timesheet_test.js:384:67
      at Query.<anonymous> (node_modules/mongoose/lib/model.js:3748:16)
      at node_modules/mongoose/node_modules/kareem/index.js:277:21
      at node_modules/mongoose/node_modules/kareem/index.js:131:16



